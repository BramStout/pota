const float dx00 =  + 0.713762  + -0.203224 *lambda + 0.136162 *lens_ipow(lambda, 2) + 0.000667277 *lens_ipow(x, 2) + 6.93669 *lens_ipow(dx, 2)*lambda + 0.657095 *lens_ipow(dy, 2)*lambda + 0.00080037 *lens_ipow(y, 2)*lambda + 0.0599381 *y*dy*lambda + 0.305282 *x*dx*lambda + -0.000697152 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -6.68444 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.288579 *x*dx*lens_ipow(lambda, 2) + -0.0622761 *y*dy*lens_ipow(lambda, 3) + -1.17139 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 41684.5 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + 43.9534 *lens_ipow(x, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + 2688.63 *x*lens_ipow(dx, 7)*lens_ipow(dy, 2)+0.0f;
const float dx01 =  + 1.48432 *dx*dy + 0.035675 *y*dx + 0.00160074 *x*y*lambda + 0.0599381 *x*dy*lambda + -0.0013943 *x*y*lens_ipow(lambda, 2) + -0.0622761 *x*dy*lens_ipow(lambda, 3) + 241.074 *lens_ipow(dx, 5)*lens_ipow(dy, 3)+0.0f;
const float dx02 =  + 46.3231  + -8.49003 *lambda + 1.48432 *y*dy + 19.351 *lens_ipow(dy, 2) + 0.0178375 *lens_ipow(y, 2) + 6.06598 *lens_ipow(lambda, 2) + 13.8734 *x*dx*lambda + 235.776 *lens_ipow(dx, 2)*lambda + 0.152641 *lens_ipow(x, 2)*lambda + -236.346 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -13.3689 *x*dx*lens_ipow(lambda, 2) + -0.14429 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 1205.37 *y*lens_ipow(dx, 4)*lens_ipow(dy, 3) + 3.94946e+06 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + 333476 *x*lens_ipow(dx, 7)*lens_ipow(dy, 2) + 87.9067 *lens_ipow(x, 3)*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 287822 *lens_ipow(dx, 4)*lens_ipow(dy, 6) + 9410.21 *lens_ipow(x, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2)+0.0f;
const float dx03 =  + 1.48432 *y*dx + 38.7021 *dx*dy + 1.31419 *x*dy*lambda + 0.0599381 *x*y*lambda + -0.0622761 *x*y*lens_ipow(lambda, 3) + -2.34278 *x*dy*lens_ipow(lambda, 5) + 723.221 *y*lens_ipow(dx, 5)*lens_ipow(dy, 2) + 877658 *lens_ipow(dx, 9)*dy + 83369 *x*lens_ipow(dx, 8)*dy + 29.3022 *lens_ipow(x, 3)*lens_ipow(dx, 6)*dy + 345386 *lens_ipow(dx, 5)*lens_ipow(dy, 5) + 2688.63 *lens_ipow(x, 2)*lens_ipow(dx, 7)*dy+0.0f;
const float dx04 =  + -0.203224 *x + -8.49003 *dx + 0.272323 *x*lambda + 12.132 *dx*lambda + 6.93669 *x*lens_ipow(dx, 2) + 78.5921 *lens_ipow(dx, 3) + 0.657095 *x*lens_ipow(dy, 2) + 0.00080037 *x*lens_ipow(y, 2) + 0.0599381 *x*y*dy + 0.152641 *lens_ipow(x, 2)*dx + -157.564 *lens_ipow(dx, 3)*lambda + -0.0013943 *x*lens_ipow(y, 2)*lambda + -13.3689 *x*lens_ipow(dx, 2)*lambda + -0.288579 *lens_ipow(x, 2)*dx*lambda + -0.186828 *x*y*dy*lens_ipow(lambda, 2) + -5.85695 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 4)+0.0f;
const float dx10 =  + 1.47114 *dx*dy + 0.0219261 *y*dx + 0.000451544 *x*y + 0.0352865 *x*dy + 0.0260617 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -24.246 *y*lens_ipow(dx, 3)*lens_ipow(dy, 4)+0.0f;
const float dx11 =  + 0.711668  + -0.193319 *lambda + 0.286513 *lens_ipow(dx, 2) + 0.0219261 *x*dx + 0.128495 *lens_ipow(lambda, 2) + 0.000225772 *lens_ipow(x, 2) + 0.000616552 *lens_ipow(y, 2) + 6.17418 *lens_ipow(dy, 2)*lambda + 0.280677 *y*dy*lambda + -0.265473 *y*dy*lens_ipow(lambda, 2) + -5.97842 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 792.381 *y*lens_ipow(dy, 7) + 0.0260617 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 6467.85 *lens_ipow(dy, 8) + 0.756899 *lens_ipow(y, 3)*lens_ipow(dy, 5) + 0.00586542 *lens_ipow(y, 4)*lens_ipow(dy, 4) + 36.6879 *lens_ipow(y, 2)*lens_ipow(dy, 6) + -24.246 *x*lens_ipow(dx, 3)*lens_ipow(dy, 4)+0.0f;
const float dx12 =  + 0.573025 *y*dx + 1.47114 *x*dy + 0.0219261 *x*y + 37.4438 *dx*dy + 44732.5 *lens_ipow(dx, 3)*lens_ipow(dy, 5) + 0.0260617 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -72.738 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 4)+0.0f;
const float dx13 =  + 46.3848  + -8.46928 *lambda + 1.47114 *x*dx + 18.7219 *lens_ipow(dx, 2) + 6.05942 *lens_ipow(lambda, 2) + 0.0176433 *lens_ipow(x, 2) + 12.3484 *y*dy*lambda + 189.272 *lens_ipow(dy, 2)*lambda + 0.140338 *lens_ipow(y, 2)*lambda + -0.132736 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -194.666 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -11.9568 *y*dy*lens_ipow(lambda, 2) + 55915.7 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + 2773.33 *lens_ipow(y, 2)*lens_ipow(dy, 6) + 385744 *lens_ipow(dy, 8) + 0.0390926 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 51742.8 *y*lens_ipow(dy, 7) + 0.946123 *lens_ipow(y, 4)*lens_ipow(dy, 4) + 0.00469234 *lens_ipow(y, 5)*lens_ipow(dy, 3) + 73.3758 *lens_ipow(y, 3)*lens_ipow(dy, 5) + -96.9839 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3)+0.0f;
const float dx14 =  + -8.46928 *dy + -0.193319 *y + 0.256991 *y*lambda + 12.1188 *dy*lambda + 6.17418 *y*lens_ipow(dy, 2) + 63.0907 *lens_ipow(dy, 3) + 0.140338 *lens_ipow(y, 2)*dy + -0.265473 *lens_ipow(y, 2)*dy*lambda + -129.777 *lens_ipow(dy, 3)*lambda + -11.9568 *y*lens_ipow(dy, 2)*lambda+0.0f;
const float dx20 =  + -0.0194105  + -0.00757095 *lambda + 0.00591832 *x*dx + 4.66262e-05 *lens_ipow(x, 2) + 0.0471877 *lens_ipow(dy, 2) + 0.139162 *lens_ipow(dx, 2) + 0.00486373 *lens_ipow(lambda, 3) + 3.33722e-05 *lens_ipow(y, 2)*lambda + 0.00794281 *y*dy*lambda + -0.00721483 *y*dy*lens_ipow(lambda, 2) + -0.000137796 *lens_ipow(y, 2)*lens_ipow(lambda, 7) + 0.0285012 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lambda + -0.108257 *x*y*lens_ipow(dx, 5)*dy*lambda + 1444.58 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + 42.4156 *x*lens_ipow(dx, 7)*lens_ipow(dy, 2)+0.0f;
const float dx21 =  + 0.000774765 *y*dx + 6.67445e-05 *x*y*lambda + 0.00794281 *x*dy*lambda + 0.352251 *dx*dy*lambda + -0.321666 *dx*dy*lens_ipow(lambda, 2) + 0.00502877 *y*dx*lens_ipow(lambda, 2) + -0.00721483 *x*dy*lens_ipow(lambda, 2) + -0.0109734 *y*dx*lens_ipow(lambda, 5) + 51.0763 *lens_ipow(dx, 7)*dy*lambda + 1.73733 *y*lens_ipow(dx, 7)*lambda + -0.000275592 *x*y*lens_ipow(lambda, 7) + 0.0570025 *x*y*lens_ipow(dx, 6)*lambda + -0.0541286 *lens_ipow(x, 2)*lens_ipow(dx, 5)*dy*lambda+0.0f;
const float dx22 =  + 0.193426  + -0.519864 *lambda + 0.00295916 *lens_ipow(x, 2) + 5.25006 *lens_ipow(dx, 2) + 1.82003 *lens_ipow(dy, 2) + 0.278324 *x*dx + 0.000387383 *lens_ipow(y, 2) + 0.349752 *lens_ipow(lambda, 2) + 0.352251 *y*dy*lambda + -0.321666 *y*dy*lens_ipow(lambda, 2) + 0.00251438 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -0.00548668 *lens_ipow(y, 2)*lens_ipow(lambda, 5) + 357.534 *y*lens_ipow(dx, 6)*dy*lambda + 6.08066 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lambda + 0.171007 *x*lens_ipow(y, 2)*lens_ipow(dx, 5)*lambda + -0.270643 *lens_ipow(x, 2)*y*lens_ipow(dx, 4)*dy*lambda + 218616 *lens_ipow(dx, 8)*lens_ipow(dy, 2) + 11556.7 *x*lens_ipow(dx, 7)*lens_ipow(dy, 2) + 148.455 *lens_ipow(x, 2)*lens_ipow(dx, 6)*lens_ipow(dy, 2)+0.0f;
const float dx23 =  + 3.64005 *dx*dy + 0.0943754 *x*dy + 0.00794281 *x*y*lambda + 0.352251 *y*dx*lambda + -0.321666 *y*dx*lens_ipow(lambda, 2) + -0.00721483 *x*y*lens_ipow(lambda, 2) + 51.0763 *y*lens_ipow(dx, 7)*lambda + -0.0541286 *lens_ipow(x, 2)*y*lens_ipow(dx, 5)*lambda + 48581.4 *lens_ipow(dx, 9)*dy + 2889.17 *x*lens_ipow(dx, 8)*dy + 42.4156 *lens_ipow(x, 2)*lens_ipow(dx, 7)*dy+0.0f;
const float dx24 =  + -0.00757095 *x + -0.519864 *dx + 0.699504 *dx*lambda + 0.0145912 *x*lens_ipow(lambda, 2) + 3.33722e-05 *x*lens_ipow(y, 2) + 0.00794281 *x*y*dy + 0.352251 *y*dx*dy + -0.643332 *y*dx*dy*lambda + 0.00502877 *lens_ipow(y, 2)*dx*lambda + -0.0144297 *x*y*dy*lambda + -0.0274334 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 4) + 51.0763 *y*lens_ipow(dx, 7)*dy + 0.868666 *lens_ipow(y, 2)*lens_ipow(dx, 7) + -0.000964572 *x*lens_ipow(y, 2)*lens_ipow(lambda, 6) + 0.0285012 *x*lens_ipow(y, 2)*lens_ipow(dx, 6) + -0.0541286 *lens_ipow(x, 2)*y*lens_ipow(dx, 5)*dy+0.0f;
const float dx30 =  + 3.60948e-05 *x*y + 0.00191005 *x*dy + 0.0100797 *y*dx*lambda + 0.450628 *dx*dy*lambda + -0.486312 *dx*dy*lens_ipow(lambda, 2) + -0.0108135 *y*dx*lens_ipow(lambda, 2) + -0.000267127 *x*y*lens_ipow(lambda, 8) + -0.0123579 *x*dy*lens_ipow(lambda, 8)+0.0f;
const float dx31 =  + -0.0168014  + -0.0204047 *lambda + 0.024334 *lens_ipow(dx, 2) + 0.016939 *lens_ipow(lambda, 2) + 1.80474e-05 *lens_ipow(x, 2) + 0.677667 *lens_ipow(dy, 2)*lambda + 0.0883553 *lens_ipow(dx, 2)*lambda + 0.0276467 *y*dy*lambda + 0.000165582 *lens_ipow(y, 2)*lambda + 0.0100797 *x*dx*lambda + -0.0293073 *y*dy*lens_ipow(lambda, 2) + -0.0108135 *x*dx*lens_ipow(lambda, 2) + -0.759634 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.137746 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.000237298 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + 0.0770499 *lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.000133563 *lens_ipow(x, 2)*lens_ipow(lambda, 8)+0.0f;
const float dx32 =  + 0.0486679 *y*dx + 0.176711 *y*dx*lambda + 17.9851 *dx*dy*lambda + 0.0100797 *x*y*lambda + 0.450628 *x*dy*lambda + -0.486312 *x*dy*lens_ipow(lambda, 2) + -0.0108135 *x*y*lens_ipow(lambda, 2) + -19.7075 *dx*dy*lens_ipow(lambda, 2) + -0.275492 *y*dx*lens_ipow(lambda, 3)+0.0f;
const float dx33 =  + 0.265126  + -0.864899 *lambda + 0.717785 *lens_ipow(lambda, 2) + 0.000955023 *lens_ipow(x, 2) + 1.35533 *y*dy*lambda + 8.99256 *lens_ipow(dx, 2)*lambda + 26.2509 *lens_ipow(dy, 2)*lambda + 0.0138233 *lens_ipow(y, 2)*lambda + 0.450628 *x*dx*lambda + -0.486312 *x*dx*lens_ipow(lambda, 2) + -0.0146537 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -28.3162 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -9.85376 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -1.51927 *y*dy*lens_ipow(lambda, 2) + 0.1541 *y*dy*lens_ipow(lambda, 4) + -0.00617896 *lens_ipow(x, 2)*lens_ipow(lambda, 8)+0.0f;
const float dx34 =  + -0.864899 *dy + -0.0204047 *y + 0.033878 *y*lambda + 1.43557 *dy*lambda + 0.677667 *y*lens_ipow(dy, 2) + 0.0883553 *y*lens_ipow(dx, 2) + 8.99256 *lens_ipow(dx, 2)*dy + 8.75028 *lens_ipow(dy, 3) + 0.0138233 *lens_ipow(y, 2)*dy + 5.51942e-05 *lens_ipow(y, 3) + 0.0100797 *x*y*dx + 0.450628 *x*dx*dy + -0.972624 *x*dx*dy*lambda + -0.0293073 *lens_ipow(y, 2)*dy*lambda + -0.021627 *x*y*dx*lambda + -18.8774 *lens_ipow(dy, 3)*lambda + -19.7075 *lens_ipow(dx, 2)*dy*lambda + -1.51927 *y*lens_ipow(dy, 2)*lambda + -0.413238 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.000237298 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + 0.3082 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00106851 *lens_ipow(x, 2)*y*lens_ipow(lambda, 7) + -0.0494317 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 7)+0.0f;
const float dx40 =  + 0.00119485 *dx + -0.211748 *lens_ipow(dx, 3) + -0.000126847 *x*y*dy + -6.49298e-05 *lens_ipow(y, 2)*dx + -1.07237e-06 *x*lens_ipow(y, 2) + -0.0103023 *x*lens_ipow(dx, 2) + -0.000159575 *lens_ipow(x, 2)*dx + -0.220791 *dx*lens_ipow(dy, 2) + -6.38211e-07 *lens_ipow(x, 3) + -0.00760324 *y*dx*dy + -0.00361584 *x*lens_ipow(dy, 2)+0.0f;
const float dx41 =  + -0.0038592 *y*lens_ipow(dx, 2) + -6.34237e-05 *lens_ipow(x, 2)*dy + -0.00012986 *x*y*dx + -1.07237e-06 *lens_ipow(x, 2)*y + -0.225889 *lens_ipow(dx, 2)*dy + -0.00760324 *x*dx*dy + -0.000300086 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.0171959 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -2.64213e-06 *lens_ipow(y, 4)*dy + -1.09916e-08 *lens_ipow(y, 5) + -0.480336 *y*lens_ipow(dy, 4) + -5.28657 *lens_ipow(dy, 5)+0.0f;
const float dx42 =  + 0.00119485 *x + 0.0873637 *dx + -12.8443 *lens_ipow(dx, 3) + -0.0038592 *lens_ipow(y, 2)*dx + -0.635243 *x*lens_ipow(dx, 2) + -13.2436 *dx*lens_ipow(dy, 2) + -6.49298e-05 *x*lens_ipow(y, 2) + -0.0103023 *lens_ipow(x, 2)*dx + -0.451778 *y*dx*dy + -5.31918e-05 *lens_ipow(x, 3) + -0.220791 *x*lens_ipow(dy, 2) + -0.00760324 *x*y*dy+0.0f;
const float dx43 =  + -13.2436 *lens_ipow(dx, 2)*dy + -6.34237e-05 *lens_ipow(x, 2)*y + -0.532856 *lens_ipow(dy, 3) + -0.225889 *y*lens_ipow(dx, 2) + -0.441583 *x*dx*dy + -0.00760324 *x*y*dx + -0.00361584 *lens_ipow(x, 2)*dy + -0.000150043 *lens_ipow(y, 4)*dy + -0.0171959 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -5.28425e-07 *lens_ipow(y, 5) + -287.512 *lens_ipow(dy, 5) + -0.960673 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -26.4329 *y*lens_ipow(dy, 4)+0.0f;
const float dx44 =  + 0.559177  + -1.55274 *lambda + 1.1378 *lens_ipow(lambda, 2)+0.0f;

const float out_x =  + 46.3231 *dx + 0.713762 *x + -0.203224 *x*lambda + -8.49003 *dx*lambda + 1.48432 *y*dx*dy + 0.136162 *x*lens_ipow(lambda, 2) + 19.351 *dx*lens_ipow(dy, 2) + 0.000222426 *lens_ipow(x, 3) + 0.0178375 *lens_ipow(y, 2)*dx + 6.06598 *dx*lens_ipow(lambda, 2) + 6.93669 *x*lens_ipow(dx, 2)*lambda + 78.5921 *lens_ipow(dx, 3)*lambda + 0.657095 *x*lens_ipow(dy, 2)*lambda + 0.00080037 *x*lens_ipow(y, 2)*lambda + 0.0599381 *x*y*dy*lambda + 0.152641 *lens_ipow(x, 2)*dx*lambda + -78.7821 *lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -0.000697152 *x*lens_ipow(y, 2)*lens_ipow(lambda, 2) + -6.68444 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.14429 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + -0.0622761 *x*y*dy*lens_ipow(lambda, 3) + -1.17139 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 241.074 *y*lens_ipow(dx, 5)*lens_ipow(dy, 3) + 438829 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 41684.5 *x*lens_ipow(dx, 8)*lens_ipow(dy, 2) + 14.6511 *lens_ipow(x, 3)*lens_ipow(dx, 6)*lens_ipow(dy, 2) + 57564.4 *lens_ipow(dx, 5)*lens_ipow(dy, 6) + 1344.32 *lens_ipow(x, 2)*lens_ipow(dx, 7)*lens_ipow(dy, 2);
const float out_y =  + 0.711668 *y + 46.3848 *dy + -8.46928 *dy*lambda + -0.193319 *y*lambda + 0.286513 *y*lens_ipow(dx, 2) + 1.47114 *x*dx*dy + 0.0219261 *x*y*dx + 18.7219 *lens_ipow(dx, 2)*dy + 0.128495 *y*lens_ipow(lambda, 2) + 0.000225772 *lens_ipow(x, 2)*y + 6.05942 *dy*lens_ipow(lambda, 2) + 0.000205517 *lens_ipow(y, 3) + 0.0176433 *lens_ipow(x, 2)*dy + 6.17418 *y*lens_ipow(dy, 2)*lambda + 63.0907 *lens_ipow(dy, 3)*lambda + 0.140338 *lens_ipow(y, 2)*dy*lambda + -0.132736 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -64.8887 *lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -5.97842 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 11183.1 *lens_ipow(dx, 4)*lens_ipow(dy, 5) + 396.191 *lens_ipow(y, 2)*lens_ipow(dy, 7) + 42860.5 *lens_ipow(dy, 9) + 0.0130309 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 6467.85 *y*lens_ipow(dy, 8) + 0.189225 *lens_ipow(y, 4)*lens_ipow(dy, 5) + 0.00117308 *lens_ipow(y, 5)*lens_ipow(dy, 4) + 12.2293 *lens_ipow(y, 3)*lens_ipow(dy, 6) + -24.246 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 4);
const float out_dx =  + 0.193426 *dx + -0.0194105 *x + -0.00757095 *x*lambda + -0.519864 *dx*lambda + 0.00295916 *lens_ipow(x, 2)*dx + 1.75002 *lens_ipow(dx, 3) + 1.82003 *dx*lens_ipow(dy, 2) + 1.55421e-05 *lens_ipow(x, 3) + 0.0471877 *x*lens_ipow(dy, 2) + 0.139162 *x*lens_ipow(dx, 2) + 0.000387383 *lens_ipow(y, 2)*dx + 0.349752 *dx*lens_ipow(lambda, 2) + 0.00486373 *x*lens_ipow(lambda, 3) + 3.33722e-05 *x*lens_ipow(y, 2)*lambda + 0.00794281 *x*y*dy*lambda + 0.352251 *y*dx*dy*lambda + -0.321666 *y*dx*dy*lens_ipow(lambda, 2) + 0.00251438 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -0.00721483 *x*y*dy*lens_ipow(lambda, 2) + -0.00548668 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 5) + 51.0763 *y*lens_ipow(dx, 7)*dy*lambda + 0.868666 *lens_ipow(y, 2)*lens_ipow(dx, 7)*lambda + -0.000137796 *x*lens_ipow(y, 2)*lens_ipow(lambda, 7) + 0.0285012 *x*lens_ipow(y, 2)*lens_ipow(dx, 6)*lambda + -0.0541286 *lens_ipow(x, 2)*y*lens_ipow(dx, 5)*dy*lambda + 24290.7 *lens_ipow(dx, 9)*lens_ipow(dy, 2) + 1444.58 *x*lens_ipow(dx, 8)*lens_ipow(dy, 2) + 21.2078 *lens_ipow(x, 2)*lens_ipow(dx, 7)*lens_ipow(dy, 2);
const float out_dy =  + -0.0168014 *y + 0.265126 *dy + -0.864899 *dy*lambda + -0.0204047 *y*lambda + 0.024334 *y*lens_ipow(dx, 2) + 0.016939 *y*lens_ipow(lambda, 2) + 1.80474e-05 *lens_ipow(x, 2)*y + 0.717785 *dy*lens_ipow(lambda, 2) + 0.000955023 *lens_ipow(x, 2)*dy + 0.677667 *y*lens_ipow(dy, 2)*lambda + 0.0883553 *y*lens_ipow(dx, 2)*lambda + 8.99256 *lens_ipow(dx, 2)*dy*lambda + 8.75028 *lens_ipow(dy, 3)*lambda + 0.0138233 *lens_ipow(y, 2)*dy*lambda + 5.51942e-05 *lens_ipow(y, 3)*lambda + 0.0100797 *x*y*dx*lambda + 0.450628 *x*dx*dy*lambda + -0.486312 *x*dx*dy*lens_ipow(lambda, 2) + -0.0146537 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -0.0108135 *x*y*dx*lens_ipow(lambda, 2) + -9.43872 *lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -9.85376 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -0.759634 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.137746 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -7.90994e-05 *lens_ipow(y, 3)*lens_ipow(lambda, 3) + 0.0770499 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -0.000133563 *lens_ipow(x, 2)*y*lens_ipow(lambda, 8) + -0.00617896 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 8);
const float out_transmittance =  + 0.638245  + 0.559177 *lambda + 0.00119485 *x*dx + 0.0436819 *lens_ipow(dx, 2) + -0.776372 *lens_ipow(lambda, 2) + 0.379266 *lens_ipow(lambda, 3) + -3.21109 *lens_ipow(dx, 4) + -0.0019296 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.211748 *x*lens_ipow(dx, 3) + -6.62181 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -6.34237e-05 *lens_ipow(x, 2)*y*dy + -0.133214 *lens_ipow(dy, 4) + -6.49298e-05 *x*lens_ipow(y, 2)*dx + -5.36186e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.00515114 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.225889 *y*lens_ipow(dx, 2)*dy + -5.31918e-05 *lens_ipow(x, 3)*dx + -0.220791 *x*dx*lens_ipow(dy, 2) + -1.59553e-07 *lens_ipow(x, 4) + -0.00760324 *x*y*dx*dy + -0.00180792 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -7.50215e-05 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.00573197 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -5.28425e-07 *lens_ipow(y, 5)*dy + -47.9187 *lens_ipow(dy, 6) + -1.83193e-09 *lens_ipow(y, 6) + -0.240168 *lens_ipow(y, 2)*lens_ipow(dy, 4) + -5.28657 *y*lens_ipow(dy, 5);

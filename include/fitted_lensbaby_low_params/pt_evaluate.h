const float out_x =  + 0.996674 *x + 118.309 *dx + 1.39008 *dx*lambda + -1.11035 *x*lens_ipow(dx, 2) + -70.6182 *dx*lens_ipow(dy, 2) + -0.00484487 *lens_ipow(y, 2)*dx + -0.00435344 *lens_ipow(x, 2)*dx + -70.2281 *lens_ipow(dx, 3) + -1.15047 *y*dx*dy + -0.948755 *dx*lens_ipow(lambda, 2) + 32.7504 *dx*lens_ipow(dy, 4) + 74.0983 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 49.726 *lens_ipow(dx, 5) + 0.396142 *y*dx*lens_ipow(dy, 3) + 0.985293 *y*lens_ipow(dx, 3)*dy + 0.00370317 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.67681 *x*lens_ipow(dx, 4) + 0.000120336 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 1.88443e-06 *lens_ipow(x, 3)*y*dy + 8.15759e-09 *lens_ipow(x, 3)*lens_ipow(y, 2);
const float out_y =  + 0.996669 *y + 118.312 *dy + 1.3768 *dy*lambda + -1.15112 *x*dx*dy + -0.00435209 *lens_ipow(y, 2)*dy + -0.937299 *dy*lens_ipow(lambda, 2) + -70.6186 *lens_ipow(dx, 2)*dy + -0.00484509 *lens_ipow(x, 2)*dy + -70.1825 *lens_ipow(dy, 3) + -1.10988 *y*lens_ipow(dy, 2) + 48.9144 *lens_ipow(dy, 5) + 73.7254 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 33.6204 *lens_ipow(dx, 4)*dy + 0.665577 *y*lens_ipow(dy, 4) + 0.000121573 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.980325 *x*dx*lens_ipow(dy, 3) + 0.419576 *x*lens_ipow(dx, 3)*dy + 1.90829e-06 *x*lens_ipow(y, 3)*dx + 0.00368531 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 8.37799e-09 *lens_ipow(x, 2)*lens_ipow(y, 3);
const float out_dx =  + -0.0261141 *x + -2.08444 *dx + 1.24794 *dx*lambda + 0.0113579 *x*lambda + 0.00293917 *x*lens_ipow(dx, 2) + -0.0350307 *x*lens_ipow(dy, 2) + -2.96306 *dx*lens_ipow(dy, 2) + -0.000222209 *lens_ipow(y, 2)*dx + -0.0156891 *x*lens_ipow(lambda, 2) + -8.89703e-06 *lens_ipow(x, 2)*dx + 0.0475137 *lens_ipow(dx, 3) + -2.86083e-06 *x*lens_ipow(y, 2) + -0.000675006 *x*y*dy + -0.0524915 *y*dx*dy + -1.7205 *dx*lens_ipow(lambda, 2) + 0.834249 *dx*lens_ipow(lambda, 3) + 0.00762043 *x*lens_ipow(lambda, 3) + 0.937209 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.0259636 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000226608 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2);
const float out_dy =  + -0.0257907 *y + -2.08085 *dy + 1.23271 *dy*lambda + 0.00900548 *y*lambda + 0.0777339 *x*dx*dy + -1.70286 *dy*lens_ipow(lambda, 2) + 2.86738e-06 *lens_ipow(x, 2)*y + 3.05385 *lens_ipow(dx, 2)*dy + 0.00045011 *lens_ipow(x, 2)*dy + 0.0842326 *lens_ipow(dy, 3) + -0.00936601 *y*lens_ipow(lambda, 2) + 0.00413083 *y*lens_ipow(dy, 2) + 0.000433741 *x*y*dx + 0.0162663 *y*lens_ipow(dx, 2) + 0.826829 *dy*lens_ipow(lambda, 3) + 4.64832e-08 *lens_ipow(y, 3)*lambda + 0.00343486 *y*lens_ipow(lambda, 4) + -0.00443922 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 5.2043e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 5.44099e-05 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda;
const float out_transmittance =  + 0.878548  + 0.175256 *lambda + -0.242836 *lens_ipow(lambda, 2) + -7.12396e-07 *lens_ipow(x, 2) + -0.000114502 *x*dx + -0.000267376 *y*dy + -1.79673e-06 *lens_ipow(y, 2) + -0.0103272 *lens_ipow(dy, 2) + -0.00513843 *lens_ipow(dx, 2) + 0.11827 *lens_ipow(lambda, 3) + -3.53246e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.40969e-06 *lens_ipow(x, 3)*dx + -3.44642e-07 *lens_ipow(x, 2)*y*dy + -0.136696 *lens_ipow(dx, 4) + -3.40223e-07 *x*lens_ipow(y, 2)*dx + -3.6618e-05 *x*y*dx*dy + -0.0069304 *x*lens_ipow(dx, 3) + 0.000352804 *y*lens_ipow(dy, 3) + -5.01847e-09 *lens_ipow(x, 4) + -0.000148497 *lens_ipow(x, 2)*lens_ipow(dx, 2);

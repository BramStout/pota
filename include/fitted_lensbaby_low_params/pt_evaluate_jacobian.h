const float dx00 =  + 0.996674  + -1.11035 *lens_ipow(dx, 2) + -0.00870688 *x*dx + 0.67681 *lens_ipow(dx, 4) + 0.000361008 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 5.65329e-06 *lens_ipow(x, 2)*y*dy + 2.44728e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)+0.0f;
const float dx01 =  + -0.00968974 *y*dx + -1.15047 *dx*dy + 0.396142 *dx*lens_ipow(dy, 3) + 0.985293 *lens_ipow(dx, 3)*dy + 0.00740634 *y*lens_ipow(dx, 3) + 1.88443e-06 *lens_ipow(x, 3)*dy + 1.63152e-08 *lens_ipow(x, 3)*y+0.0f;
const float dx02 =  + 118.309  + 1.39008 *lambda + -2.2207 *x*dx + -70.6182 *lens_ipow(dy, 2) + -0.00484487 *lens_ipow(y, 2) + -0.00435344 *lens_ipow(x, 2) + -210.684 *lens_ipow(dx, 2) + -1.15047 *y*dy + -0.948755 *lens_ipow(lambda, 2) + 32.7504 *lens_ipow(dy, 4) + 222.295 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 248.63 *lens_ipow(dx, 4) + 0.396142 *y*lens_ipow(dy, 3) + 2.95588 *y*lens_ipow(dx, 2)*dy + 0.0111095 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 2.70724 *x*lens_ipow(dx, 3)+0.0f;
const float dx03 =  + -141.236 *dx*dy + -1.15047 *y*dx + 131.002 *dx*lens_ipow(dy, 3) + 148.197 *lens_ipow(dx, 3)*dy + 1.18843 *y*dx*lens_ipow(dy, 2) + 0.985293 *y*lens_ipow(dx, 3) + 0.000240672 *lens_ipow(x, 3)*dy + 1.88443e-06 *lens_ipow(x, 3)*y+0.0f;
const float dx04 =  + 1.39008 *dx + -1.89751 *dx*lambda+0.0f;
const float dx10 =  + -1.15112 *dx*dy + -0.00969017 *x*dy + 0.980325 *dx*lens_ipow(dy, 3) + 0.419576 *lens_ipow(dx, 3)*dy + 1.90829e-06 *lens_ipow(y, 3)*dx + 0.00737063 *x*lens_ipow(dy, 3) + 1.6756e-08 *x*lens_ipow(y, 3)+0.0f;
const float dx11 =  + 0.996669  + -0.00870419 *y*dy + -1.10988 *lens_ipow(dy, 2) + 0.665577 *lens_ipow(dy, 4) + 0.000364719 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 5.72486e-06 *x*lens_ipow(y, 2)*dx + 2.5134e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)+0.0f;
const float dx12 =  + -1.15112 *x*dy + -141.237 *dx*dy + 147.451 *dx*lens_ipow(dy, 3) + 134.482 *lens_ipow(dx, 3)*dy + 0.000243146 *lens_ipow(y, 3)*dx + 0.980325 *x*lens_ipow(dy, 3) + 1.25873 *x*lens_ipow(dx, 2)*dy + 1.90829e-06 *x*lens_ipow(y, 3)+0.0f;
const float dx13 =  + 118.312  + 1.3768 *lambda + -1.15112 *x*dx + -0.00435209 *lens_ipow(y, 2) + -0.937299 *lens_ipow(lambda, 2) + -70.6186 *lens_ipow(dx, 2) + -0.00484509 *lens_ipow(x, 2) + -210.548 *lens_ipow(dy, 2) + -2.21975 *y*dy + 244.572 *lens_ipow(dy, 4) + 221.176 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 33.6204 *lens_ipow(dx, 4) + 2.66231 *y*lens_ipow(dy, 3) + 2.94097 *x*dx*lens_ipow(dy, 2) + 0.419576 *x*lens_ipow(dx, 3) + 0.0110559 *lens_ipow(x, 2)*lens_ipow(dy, 2)+0.0f;
const float dx14 =  + 1.3768 *dy + -1.8746 *dy*lambda+0.0f;
const float dx20 =  + -0.0261141  + 0.0113579 *lambda + 0.00293917 *lens_ipow(dx, 2) + -0.0350307 *lens_ipow(dy, 2) + -0.0156891 *lens_ipow(lambda, 2) + -1.77941e-05 *x*dx + -2.86083e-06 *lens_ipow(y, 2) + -0.000675006 *y*dy + 0.00762043 *lens_ipow(lambda, 3) + 0.0259636 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000453216 *x*dx*lens_ipow(dy, 2)+0.0f;
const float dx21 =  + -0.000444418 *y*dx + -5.72166e-06 *x*y + -0.000675006 *x*dy + -0.0524915 *dx*dy+0.0f;
const float dx22 =  + -2.08444  + 1.24794 *lambda + 0.00587833 *x*dx + -2.96306 *lens_ipow(dy, 2) + -0.000222209 *lens_ipow(y, 2) + -8.89703e-06 *lens_ipow(x, 2) + 0.142541 *lens_ipow(dx, 2) + -0.0524915 *y*dy + -1.7205 *lens_ipow(lambda, 2) + 0.834249 *lens_ipow(lambda, 3) + 2.81163 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.0519272 *x*dx*lens_ipow(dy, 2) + 0.000226608 *lens_ipow(x, 2)*lens_ipow(dy, 2)+0.0f;
const float dx23 =  + -0.0700614 *x*dy + -5.92613 *dx*dy + -0.000675006 *x*y + -0.0524915 *y*dx + 1.87442 *lens_ipow(dx, 3)*dy + 0.0519272 *x*lens_ipow(dx, 2)*dy + 0.000453216 *lens_ipow(x, 2)*dx*dy+0.0f;
const float dx24 =  + 1.24794 *dx + 0.0113579 *x + -0.0313782 *x*lambda + -3.44099 *dx*lambda + 2.50275 *dx*lens_ipow(lambda, 2) + 0.0228613 *x*lens_ipow(lambda, 2)+0.0f;
const float dx30 =  + 0.0777339 *dx*dy + 5.73476e-06 *x*y + 0.00090022 *x*dy + 0.000433741 *y*dx + 0.000104086 *x*lens_ipow(dx, 2)*dy+0.0f;
const float dx31 =  + -0.0257907  + 0.00900548 *lambda + 2.86738e-06 *lens_ipow(x, 2) + -0.00936601 *lens_ipow(lambda, 2) + 0.00413083 *lens_ipow(dy, 2) + 0.000433741 *x*dx + 0.0162663 *lens_ipow(dx, 2) + 1.39449e-07 *lens_ipow(y, 2)*lambda + 0.00343486 *lens_ipow(lambda, 4) + -0.00443922 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00010882 *y*lens_ipow(dy, 3)*lambda+0.0f;
const float dx32 =  + 0.0777339 *x*dy + 6.10771 *dx*dy + 0.000433741 *x*y + 0.0325327 *y*dx + -0.00887844 *y*dx*lens_ipow(dy, 2) + 0.000104086 *lens_ipow(x, 2)*dx*dy+0.0f;
const float dx33 =  + -2.08085  + 1.23271 *lambda + 0.0777339 *x*dx + -1.70286 *lens_ipow(lambda, 2) + 3.05385 *lens_ipow(dx, 2) + 0.00045011 *lens_ipow(x, 2) + 0.252698 *lens_ipow(dy, 2) + 0.00826166 *y*dy + 0.826829 *lens_ipow(lambda, 3) + -0.00887844 *y*lens_ipow(dx, 2)*dy + 5.2043e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 0.00016323 *lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda+0.0f;
const float dx34 =  + 1.23271 *dy + 0.00900548 *y + -3.40572 *dy*lambda + -0.018732 *y*lambda + 2.48049 *dy*lens_ipow(lambda, 2) + 4.64832e-08 *lens_ipow(y, 3) + 0.0137394 *y*lens_ipow(lambda, 3) + 5.44099e-05 *lens_ipow(y, 2)*lens_ipow(dy, 3)+0.0f;
const float dx40 =  + -1.42479e-06 *x + -0.000114502 *dx + -7.06491e-09 *x*lens_ipow(y, 2) + -4.22906e-06 *lens_ipow(x, 2)*dx + -6.89285e-07 *x*y*dy + -3.40223e-07 *lens_ipow(y, 2)*dx + -3.6618e-05 *y*dx*dy + -0.0069304 *lens_ipow(dx, 3) + -2.00739e-08 *lens_ipow(x, 3) + -0.000296995 *x*lens_ipow(dx, 2)+0.0f;
const float dx41 =  + -0.000267376 *dy + -3.59345e-06 *y + -7.06491e-09 *lens_ipow(x, 2)*y + -3.44642e-07 *lens_ipow(x, 2)*dy + -6.80447e-07 *x*y*dx + -3.6618e-05 *x*dx*dy + 0.000352804 *lens_ipow(dy, 3)+0.0f;
const float dx42 =  + -0.000114502 *x + -0.0102769 *dx + -1.40969e-06 *lens_ipow(x, 3) + -0.546782 *lens_ipow(dx, 3) + -3.40223e-07 *x*lens_ipow(y, 2) + -3.6618e-05 *x*y*dy + -0.0207912 *x*lens_ipow(dx, 2) + -0.000296995 *lens_ipow(x, 2)*dx+0.0f;
const float dx43 =  + -0.000267376 *y + -0.0206545 *dy + -3.44642e-07 *lens_ipow(x, 2)*y + -3.6618e-05 *x*y*dx + 0.00105841 *y*lens_ipow(dy, 2)+0.0f;
const float dx44 =  + 0.175256  + -0.485672 *lambda + 0.35481 *lens_ipow(lambda, 2)+0.0f;

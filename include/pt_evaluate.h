const float out_x =  + 49.6109 *dx + -0.621577 *x + 0.674235 *x*lambda + 0.214431 *y*dx*dy + 0.00612017 *x*y*dy + 0.0185352 *lens_ipow(x, 2)*dx + -19.0762 *lens_ipow(dx, 3) + -0.526696 *x*lens_ipow(lambda, 2) + -19.997 *dx*lens_ipow(dy, 2) + -0.00135091 *x*lens_ipow(y, 2) + -0.00120413 *lens_ipow(x, 3) + 0.265561 *x*lens_ipow(dy, 2) + 0.547505 *x*lens_ipow(dx, 2) + 0.000620579 *x*lens_ipow(y, 2)*lambda + 0.000501355 *lens_ipow(x, 3)*lambda + 0.00915562 *lens_ipow(y, 2)*dx*lambda + 0.0777405 *x*y*lens_ipow(dx, 2)*dy + -4.20841e-05 *lens_ipow(x, 4)*dx + -0.00108756 *lens_ipow(y, 3)*dx*dy + 0.0289986 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.00208955 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -4.49517e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + -9.51913e-09 *lens_ipow(x, 3)*lens_ipow(y, 4) + -3.46111e-09 *lens_ipow(x, 7) + -7.05762e-12 *x*lens_ipow(y, 8) + -6.20338e-11 *lens_ipow(x, 7)*lens_ipow(y, 2) + 0.0285076 *lens_ipow(y, 3)*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 4) + 1.33412e-13 *lens_ipow(x, 9)*lens_ipow(y, 2);
const float out_y =  + -0.613564 *y + 49.7175 *dy + 0.669005 *y*lambda + 0.246172 *y*lens_ipow(dx, 2) + 0.0126827 *lens_ipow(y, 2)*dy + 0.232757 *y*lens_ipow(dy, 2) + 0.00701796 *x*y*dx + -19.0477 *lens_ipow(dx, 2)*dy + -0.524051 *y*lens_ipow(lambda, 2) + -0.00133375 *lens_ipow(x, 2)*y + -0.00127186 *lens_ipow(y, 3) + -21.4258 *lens_ipow(dy, 3) + 0.0105956 *lens_ipow(x, 2)*dy*lambda + 0.000544614 *lens_ipow(y, 3)*lambda + 0.333688 *x*dx*dy*lambda + 0.000640797 *lens_ipow(x, 2)*y*lambda + -1.70371e-05 *lens_ipow(y, 4)*dy + 0.156726 *x*y*dx*lens_ipow(dy, 2)*lambda + 2.94679 *y*lens_ipow(dy, 4)*lambda + 0.128866 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + -3.102e-09 *lens_ipow(y, 7) + 0.000269581 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -1.5407e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + -2.72774e-09 *lens_ipow(x, 6)*y + 5.47118 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + -8.15344e-09 *lens_ipow(x, 2)*lens_ipow(y, 5) + -8.67539e-09 *lens_ipow(x, 4)*lens_ipow(y, 3) + 67.1056 *lens_ipow(dy, 7)*lambda;
const float out_dx =  + -0.614401 *dx + -0.0124033 *x + -0.00877929 *x*lambda + 0.00908301 *dx*lambda + -6.4694e-05 *x*y*dy + -9.8007e-05 *lens_ipow(x, 2)*dx + 0.305271 *lens_ipow(dx, 3) + 0.00706724 *x*lens_ipow(lambda, 2) + 0.148208 *dx*lens_ipow(dy, 2) + 1.74459e-05 *x*lens_ipow(y, 2) + 1.77203e-05 *lens_ipow(x, 3) + -0.00111275 *x*lens_ipow(dy, 2) + -7.43443e-06 *x*lens_ipow(y, 2)*lambda + -7.39746e-06 *lens_ipow(x, 3)*lambda + -2.36067e-07 *lens_ipow(x, 4)*dx + -1.07743e-07 *lens_ipow(y, 4)*dx + -0.289597 *lens_ipow(dx, 5) + 6.58747e-09 *x*lens_ipow(y, 4) + -3.09809e-07 *x*lens_ipow(y, 3)*dy + -0.00453847 *x*lens_ipow(dy, 4) + 0.000362057 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 3.63636e-05 *lens_ipow(x, 2)*y*dx*dy + 0.000693516 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 1.32547e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + -0.0485359 *x*lens_ipow(dx, 6) + 3.30777e-11 *lens_ipow(x, 7) + 4.41165e-13 *lens_ipow(x, 3)*lens_ipow(y, 6) + 0.0506785 *x*y*lens_ipow(dx, 4)*lens_ipow(dy, 3)*lambda;
const float out_dy =  + -0.0119193 *y + -0.614842 *dy + -0.00958648 *y*lambda + -0.00420097 *y*lens_ipow(dx, 2) + 0.00389116 *x*dx*dy + -0.000108381 *x*y*dx + 0.428204 *lens_ipow(dx, 2)*dy + 0.00700915 *y*lens_ipow(lambda, 2) + 1.32734e-05 *lens_ipow(x, 2)*y + 1.40797e-05 *lens_ipow(y, 3) + 0.322422 *lens_ipow(dy, 3) + -0.469415 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.191137 *lens_ipow(dy, 5) + 2.31037e-08 *lens_ipow(x, 4)*y + -0.308648 *lens_ipow(dx, 4)*dy + -8.0158e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -1.92001e-08 *lens_ipow(x, 4)*y*lambda + -5.34204e-09 *lens_ipow(y, 6)*dy + 2.65798e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + -3.59985e-10 *lens_ipow(x, 6)*dy + -0.000157427 *lens_ipow(x, 2)*y*lens_ipow(dy, 4)*lambda + -2.54677e-10 *lens_ipow(x, 2)*lens_ipow(y, 5)*lambda + 9.48325e-14 *lens_ipow(y, 9) + 3.56726e-13 *lens_ipow(x, 6)*lens_ipow(y, 3) + 1.47454e-06 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 3) + 1.24034e-08 *lens_ipow(y, 6)*lens_ipow(dx, 2)*dy + 2.22341e-11 *lens_ipow(y, 8)*dy*lambda + -0.00303946 *lens_ipow(x, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2);
const float out_transmittance =  + 0.238949  + 0.85346 *lambda + -1.16866 *lens_ipow(lambda, 2) + -0.000545894 *y*dy*lambda + -0.000532821 *x*dx*lambda + 0.564312 *lens_ipow(lambda, 3) + -0.206872 *lens_ipow(dx, 4) + -0.00790672 *y*lens_ipow(dy, 3) + -0.00013516 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.00809514 *x*lens_ipow(dx, 3) + -0.204782 *lens_ipow(dy, 4) + -8.85833e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000243089 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.00648351 *y*lens_ipow(dx, 2)*dy + -0.000239826 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.00654443 *x*dx*lens_ipow(dy, 2) + -0.000460228 *x*y*dx*dy + -0.00013569 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.59096 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -1.67893e-10 *lens_ipow(x, 6) + -0.000863147 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 1.18371 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.68689e-10 *lens_ipow(y, 6) + -0.000849445 *lens_ipow(y, 2)*lens_ipow(dy, 4) + -2.32122e-12 *lens_ipow(x, 4)*lens_ipow(y, 4) + 8.17818e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + -0.321221 *lens_ipow(dx, 6)*lens_ipow(lambda, 2) + -0.341708 *lens_ipow(dy, 6)*lens_ipow(lambda, 2);

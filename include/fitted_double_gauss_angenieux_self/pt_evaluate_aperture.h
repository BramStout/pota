const float out_x =  + 26.7119 *dx + 1.09538 *x*lambda + 6.60947 *dx*lambda + -0.0547589 *y*dx*dy + 0.00189755 *lens_ipow(x, 2)*dx + -16.5359 *lens_ipow(dx, 3) + -1.63151 *x*lens_ipow(lambda, 2) + -14.2808 *dx*lens_ipow(dy, 2) + -0.000478074 *x*lens_ipow(y, 2) + -0.000412757 *lens_ipow(x, 3) + -0.184661 *x*lens_ipow(dy, 2) + -4.54335 *dx*lens_ipow(lambda, 2) + -0.356237 *x*lens_ipow(dx, 2)*lambda + 0.838616 *x*lens_ipow(lambda, 3) + 4.95014e-06 *lens_ipow(y, 4)*dx + 7.55289 *lens_ipow(dx, 5) + 0.310712 *x*lens_ipow(dy, 4) + -0.0272238 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.000405637 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -0.0016729 *lens_ipow(x, 2)*y*dx*dy*lambda + 1.38156e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + -5.59676e-09 *lens_ipow(x, 5)*lens_ipow(y, 2) + -2.08299e-09 *lens_ipow(x, 7) + 1.51037e-09 *lens_ipow(x, 7)*lambda + 1.62764 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 3) + -2.43877e-11 *lens_ipow(x, 3)*lens_ipow(y, 6) + -0.000166531 *lens_ipow(y, 4)*lens_ipow(dx, 5) + 3.91242e-09 *x*lens_ipow(y, 7)*lens_ipow(dx, 2)*dy;
const float out_y =  + 26.6478 *dy + 7.07798 *dy*lambda + 1.14323 *y*lambda + -0.180053 *y*lens_ipow(dx, 2) + -0.142826 *y*lens_ipow(dy, 2) + -0.0529828 *x*dx*dy + -15.8269 *lens_ipow(dx, 2)*dy + -1.77677 *y*lens_ipow(lambda, 2) + -0.000519123 *lens_ipow(x, 2)*y + -4.90498 *dy*lens_ipow(lambda, 2) + -0.000503188 *lens_ipow(y, 3) + 0.00136072 *lens_ipow(x, 2)*dy + -16.844 *lens_ipow(dy, 3) + 0.931493 *y*lens_ipow(lambda, 3) + 0.000190732 *lens_ipow(y, 3)*lambda + 0.0001998 *lens_ipow(x, 2)*y*lambda + -0.000822313 *x*lens_ipow(y, 2)*dx*dy + 0.318617 *y*lens_ipow(dx, 4) + 6.93717 *lens_ipow(dy, 5) + -3.41864e-07 *lens_ipow(x, 4)*y + -0.00699567 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -0.000951 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 0.000114581 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + -1.3737e-09 *lens_ipow(y, 7) + 88.5367 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + -4.94822e-09 *lens_ipow(x, 2)*lens_ipow(y, 5) + -1.54899e-11 *lens_ipow(x, 6)*lens_ipow(y, 3) + -0.00168031 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(dy, 3);
const float out_dx =  + 0.399786 *dx + -0.0374335 *x + 0.0213387 *x*lambda + -0.0222137 *y*dx*dy + 0.00011936 *x*y*dy + -0.491997 *lens_ipow(dx, 3) + -0.0165778 *x*lens_ipow(lambda, 2) + -0.483482 *dx*lens_ipow(dy, 2) + -2.52176e-05 *x*lens_ipow(y, 2) + -2.76551e-05 *lens_ipow(x, 3) + -0.0329376 *x*lens_ipow(dx, 2) + -0.0367118 *x*lens_ipow(dy, 2)*lambda + 2.08498e-06 *lens_ipow(x, 4)*dx + -4.32665e-08 *x*lens_ipow(y, 4) + 2.38937e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 1.53062e-06 *lens_ipow(x, 3)*y*dy + 1.87765e-06 *x*lens_ipow(y, 3)*dy + 0.0326943 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 5.17241e-08 *x*lens_ipow(y, 4)*lambda + 8.80235e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda + -5.13369e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + -9.63804e-08 *lens_ipow(x, 5)*lens_ipow(dy, 2) + 4.36787e-08 *lens_ipow(x, 5)*lens_ipow(lambda, 2) + 4.61028e-12 *lens_ipow(y, 8)*dx + -2.84439e-13 *lens_ipow(x, 9) + -1.33303e-12 *lens_ipow(x, 3)*lens_ipow(y, 6) + -3.14982e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dx, 2) + 2.94026e-08 *lens_ipow(x, 6)*lens_ipow(dx, 3);
const float out_dy =  + -0.0358994 *y + 0.396945 *dy + 0.0169134 *y*lambda + -0.0119194 *y*lens_ipow(dx, 2) + 0.000274491 *lens_ipow(y, 2)*dy + -0.030044 *y*lens_ipow(dy, 2) + -0.0217624 *x*dx*dy + 0.000303076 *x*y*dx + -0.491456 *lens_ipow(dx, 2)*dy + -0.0139602 *y*lens_ipow(lambda, 2) + -3.47907e-05 *lens_ipow(x, 2)*y + -3.48187e-05 *lens_ipow(y, 3) + -0.4821 *lens_ipow(dy, 3) + 1.8503e-05 *lens_ipow(y, 3)*lambda + 1.95796e-05 *lens_ipow(x, 2)*y*lambda + 0.0103834 *y*lens_ipow(dx, 4) + -4.48971e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 2.71146e-09 *lens_ipow(y, 6)*dy + -9.43117e-08 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 4.17668e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -2.58285e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -1.19747e-10 *lens_ipow(x, 6)*y + 2.96507e-09 *x*lens_ipow(y, 5)*dx + -3.63437e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + -2.40231e-13 *lens_ipow(y, 9) + 1.48883e-10 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy + 1.09134e-10 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx + 3.74579e-12 *lens_ipow(x, 8)*dy;
const float out_transmittance =  + 0.5228  + 0.595453 *lambda + -0.821198 *lens_ipow(lambda, 2) + 0.39856 *lens_ipow(lambda, 3) + -0.20682 *lens_ipow(dx, 4) + -0.423475 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.211662 *lens_ipow(dy, 4) + -2.61078e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -3.5986e-08 *lens_ipow(y, 4) + -3.48454e-08 *lens_ipow(x, 4) + -0.000122306 *x*y*dx*dy + 2.97807e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + -1.11365e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.0187616 *x*lens_ipow(dx, 5) + -4.52392e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -2.58736e-07 *lens_ipow(y, 4)*lens_ipow(dx, 2) + 0.0496336 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.0182839 *x*dx*lens_ipow(dy, 4) + -7.36466e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 4) + 0.000152532 *lens_ipow(y, 3)*lens_ipow(dx, 4)*dy + -1.99915e-06 *lens_ipow(x, 4)*lens_ipow(dy, 4) + -5.58276e-06 *lens_ipow(y, 4)*lens_ipow(dy, 4) + -3.58207e-13 *lens_ipow(y, 8) + 0.000361159 *lens_ipow(x, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -3.48188e-13 *lens_ipow(x, 8) + -5.47795e-12 *lens_ipow(x, 4)*lens_ipow(y, 4)*lambda + 0.109274 *y*lens_ipow(dy, 7)*lambda + -8.67372 *lens_ipow(dx, 6)*lens_ipow(dy, 2)*lens_ipow(lambda, 3);

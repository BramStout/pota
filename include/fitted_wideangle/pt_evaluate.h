const float out_x =  + 16.7222 *dx + -1.7126 *x + -0.407092 *x*lambda + -1.50065 *dx*lambda + 2.13945 *y*dx*dy + 0.122543 *lens_ipow(x, 2)*dx + 25.686 *lens_ipow(dx, 3) + 0.265989 *x*lens_ipow(lambda, 2) + 29.8535 *dx*lens_ipow(dy, 2) + 0.00320318 *x*lens_ipow(y, 2) + 0.00349548 *lens_ipow(x, 3) + 1.05804 *x*lens_ipow(dy, 2) + 3.24433 *x*lens_ipow(dx, 2) + 0.0495496 *lens_ipow(y, 2)*dx + -1.2933 *x*lens_ipow(dx, 2)*lambda + 0.30668 *x*y*dy*lambda + -0.83918 *y*dx*dy*lambda + -3.57407e-06 *lens_ipow(x, 5) + 0.298459 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -0.388491 *x*y*dy*lens_ipow(lambda, 2) + 0.0189128 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.000272989 *lens_ipow(x, 4)*dx*lambda + 0.000109252 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -7.08814e-08 *lens_ipow(x, 3)*lens_ipow(y, 4) + 0.00565248 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.225298 *x*y*dy*lens_ipow(lambda, 5) + -0.112286 *x*lens_ipow(y, 3)*lens_ipow(dx, 4)*dy + -7.93361e-10 *lens_ipow(x, 7)*lens_ipow(y, 2)*lens_ipow(lambda, 2);
const float out_y =  + -1.72441 *y + 15.9053 *dy + -0.377417 *y*lambda + 0.96701 *y*lens_ipow(dx, 2) + 0.174206 *lens_ipow(y, 2)*dy + 5.43202 *y*lens_ipow(dy, 2) + 1.53423 *x*dx*dy + 26.636 *lens_ipow(dx, 2)*dy + 0.252523 *y*lens_ipow(lambda, 2) + 0.00320864 *lens_ipow(x, 2)*y + 0.0034628 *lens_ipow(y, 3) + 0.0508916 *lens_ipow(x, 2)*dy + 61.5968 *lens_ipow(dy, 3) + -5.08006 *y*lens_ipow(dy, 2)*lambda + -60.4737 *lens_ipow(dy, 3)*lambda + -0.0976647 *lens_ipow(y, 2)*dy*lambda + 0.234352 *x*y*dx*lambda + 0.00415282 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.000238714 *lens_ipow(y, 4)*dy*lambda + 0.36372 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lambda + -6.27167e-06 *lens_ipow(y, 5)*lambda + -0.807132 *x*y*dx*lens_ipow(lambda, 3) + -0.00640517 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 2) + 0.722321 *x*y*dx*lens_ipow(lambda, 4) + -5.45787e-08 *lens_ipow(x, 2)*lens_ipow(y, 5)*lambda + -6.20086e-10 *lens_ipow(x, 6)*lens_ipow(y, 3) + 0.0654266 *lens_ipow(x, 4)*lens_ipow(dy, 5) + 0.0037559 *lens_ipow(x, 4)*y*lens_ipow(dy, 4)*lambda;
const float out_dx =  + -0.334003 *dx + -0.026849 *x + 0.0120662 *x*lambda + -0.0196292 *dx*lambda + 0.49947 *lens_ipow(dx, 3) + -0.00827016 *x*lens_ipow(lambda, 2) + 0.435908 *dx*lens_ipow(dy, 2) + -1.03771e-05 *x*lens_ipow(y, 2) + 0.00186831 *x*lens_ipow(dy, 2) + 0.015388 *x*lens_ipow(dx, 2) + 0.00014192 *lens_ipow(y, 2)*dx + 9.35478e-05 *lens_ipow(x, 3)*lambda + -0.000392059 *lens_ipow(x, 2)*dx*lambda + 0.0477328 *y*dx*dy*lambda + -0.0481053 *y*dx*dy*lens_ipow(lambda, 2) + -0.000148114 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + -0.0221637 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -4.44502e-08 *lens_ipow(x, 5) + -0.00671039 *x*y*dy*lens_ipow(lambda, 2) + 0.0174403 *x*y*dy*lens_ipow(lambda, 3) + -1.96719e-06 *lens_ipow(x, 3)*y*dy*lambda + -2.82448e-06 *lens_ipow(x, 4)*dx*lambda + 1.35905e-06 *x*lens_ipow(y, 4)*lens_ipow(dx, 2) + 8.77094e-05 *lens_ipow(x, 3)*lens_ipow(lambda, 4) + 4.46548e-05 *lens_ipow(y, 4)*lens_ipow(dx, 3) + -0.0124094 *x*y*dy*lens_ipow(lambda, 4) + 0.00219052 *lens_ipow(y, 3)*lens_ipow(dx, 3)*dy*lambda + -2.70974 *lens_ipow(dx, 5)*lens_ipow(lambda, 3);
const float out_dy =  + -0.0266125 *y + -0.334066 *dy + -0.0170558 *dy*lambda + 0.0114614 *y*lambda + -0.00511334 *y*lens_ipow(dx, 2) + 0.0129436 *y*lens_ipow(dy, 2) + 0.00896579 *x*dx*dy + 0.477093 *lens_ipow(dx, 2)*dy + -0.00789395 *y*lens_ipow(lambda, 2) + 3.90402e-05 *lens_ipow(x, 2)*y + -0.000338784 *lens_ipow(x, 2)*dy + 0.457993 *lens_ipow(dy, 3) + -0.000567731 *lens_ipow(y, 2)*dy*lambda + 5.55763e-05 *lens_ipow(y, 3)*lambda + -2.51e-06 *x*lens_ipow(y, 3)*dx + -1.24306e-07 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.92408e-06 *lens_ipow(x, 3)*y*dx + -9.87323e-08 *lens_ipow(x, 4)*y + -2.58648e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -0.0150597 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.00600884 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lambda + -0.000216745 *lens_ipow(y, 3)*lens_ipow(lambda, 3) + -2.56526e-10 *lens_ipow(y, 7) + 0.000199 *lens_ipow(y, 3)*lens_ipow(lambda, 4) + -0.00148407 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 4) + -7.61229e-11 *lens_ipow(y, 8)*dy + 0.00038575 *lens_ipow(x, 4)*lens_ipow(dy, 5) + 0.0287351 *lens_ipow(y, 3)*lens_ipow(dx, 4)*lens_ipow(dy, 2);
const float out_transmittance =  + 1.07795 *lambda + -0.000434464 *y*dy + -1.13994e-05 *lens_ipow(y, 2) + -1.80117 *lens_ipow(lambda, 2) + 1.13999 *lens_ipow(lambda, 3) + -0.000660056 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0815446 *x*lens_ipow(dx, 3) + -8.44238 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.0738e-05 *lens_ipow(x, 2)*y*dy + -0.00279317 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.150544 *y*lens_ipow(dx, 2)*dy + -3.27969e-05 *lens_ipow(x, 3)*dx + -0.160615 *x*dx*lens_ipow(dy, 2) + -2.25778e-07 *lens_ipow(x, 4) + -0.0025113 *x*y*dx*dy + -0.000994204 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -2.06406e-05 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -98.5938 *lens_ipow(dx, 6) + -0.195942 *lens_ipow(lambda, 6) + -2.20023 *x*lens_ipow(dx, 5) + -0.00302466 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -87.6123 *lens_ipow(dy, 6) + -0.179227 *lens_ipow(y, 2)*lens_ipow(dy, 4) + -5.59084 *y*lens_ipow(dy, 5) + -0.318447 *lens_ipow(x, 2)*lens_ipow(dx, 6) + -1415.1 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + 394.675 *lens_ipow(dx, 8) + 0.671785 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3);

const float dx00 =  + -1.7126  + -0.407092 *lambda + 0.245085 *x*dx + 0.265989 *lens_ipow(lambda, 2) + 0.00320318 *lens_ipow(y, 2) + 0.0104865 *lens_ipow(x, 2) + 1.05804 *lens_ipow(dy, 2) + 3.24433 *lens_ipow(dx, 2) + -1.2933 *lens_ipow(dx, 2)*lambda + 0.30668 *y*dy*lambda + -1.78703e-05 *lens_ipow(x, 4) + -0.388491 *y*dy*lens_ipow(lambda, 2) + 0.0189128 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.00109196 *lens_ipow(x, 3)*dx*lambda + 0.000327757 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.12644e-07 *lens_ipow(x, 2)*lens_ipow(y, 4) + 0.011305 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.225298 *y*dy*lens_ipow(lambda, 5) + -0.112286 *lens_ipow(y, 3)*lens_ipow(dx, 4)*dy + -5.55352e-09 *lens_ipow(x, 6)*lens_ipow(y, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx01 =  + 2.13945 *dx*dy + 0.00640635 *x*y + 0.0990993 *y*dx + 0.30668 *x*dy*lambda + -0.83918 *dx*dy*lambda + 0.596919 *y*lens_ipow(dx, 3) + -0.388491 *x*dy*lens_ipow(lambda, 2) + 0.0378255 *x*y*lens_ipow(dx, 2)*lambda + 0.000218505 *lens_ipow(x, 3)*y*lens_ipow(dy, 2) + -2.83526e-07 *lens_ipow(x, 3)*lens_ipow(y, 3) + 0.011305 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 2) + 0.225298 *x*dy*lens_ipow(lambda, 5) + -0.336859 *x*lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + -1.58672e-09 *lens_ipow(x, 7)*y*lens_ipow(lambda, 2)+0.0f;
const float dx02 =  + 16.7222  + -1.50065 *lambda + 2.13945 *y*dy + 0.122543 *lens_ipow(x, 2) + 77.0579 *lens_ipow(dx, 2) + 29.8535 *lens_ipow(dy, 2) + 6.48866 *x*dx + 0.0495496 *lens_ipow(y, 2) + -2.5866 *x*dx*lambda + -0.83918 *y*dy*lambda + 0.895378 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 0.0378255 *x*lens_ipow(y, 2)*dx*lambda + -0.000272989 *lens_ipow(x, 4)*lambda + 0.00565248 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.449145 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*dy+0.0f;
const float dx03 =  + 2.13945 *y*dx + 59.707 *dx*dy + 2.11607 *x*dy + 0.30668 *x*y*lambda + -0.83918 *y*dx*lambda + -0.388491 *x*y*lens_ipow(lambda, 2) + 0.000218505 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy + 0.011305 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 0.225298 *x*y*lens_ipow(lambda, 5) + -0.112286 *x*lens_ipow(y, 3)*lens_ipow(dx, 4)+0.0f;
const float dx04 =  + -0.407092 *x + -1.50065 *dx + 0.531977 *x*lambda + -1.2933 *x*lens_ipow(dx, 2) + 0.30668 *x*y*dy + -0.83918 *y*dx*dy + -0.776982 *x*y*dy*lambda + 0.0189128 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000272989 *lens_ipow(x, 4)*dx + 1.12649 *x*y*dy*lens_ipow(lambda, 4) + -1.58672e-09 *lens_ipow(x, 7)*lens_ipow(y, 2)*lambda+0.0f;
const float dx10 =  + 1.53423 *dx*dy + 0.00641728 *x*y + 0.101783 *x*dy + 0.234352 *y*dx*lambda + -0.807132 *y*dx*lens_ipow(lambda, 3) + -0.0192155 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 2) + 0.722321 *y*dx*lens_ipow(lambda, 4) + -1.09157e-07 *x*lens_ipow(y, 5)*lambda + -3.72052e-09 *lens_ipow(x, 5)*lens_ipow(y, 3) + 0.261707 *lens_ipow(x, 3)*lens_ipow(dy, 5) + 0.0150236 *lens_ipow(x, 3)*y*lens_ipow(dy, 4)*lambda+0.0f;
const float dx11 =  + -1.72441  + -0.377417 *lambda + 0.96701 *lens_ipow(dx, 2) + 0.348412 *y*dy + 5.43202 *lens_ipow(dy, 2) + 0.252523 *lens_ipow(lambda, 2) + 0.00320864 *lens_ipow(x, 2) + 0.0103884 *lens_ipow(y, 2) + -5.08006 *lens_ipow(dy, 2)*lambda + -0.195329 *y*dy*lambda + 0.234352 *x*dx*lambda + 0.0124585 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000954857 *lens_ipow(y, 3)*dy*lambda + 0.72744 *y*lens_ipow(dx, 2)*dy*lambda + -3.13584e-05 *lens_ipow(y, 4)*lambda + -0.807132 *x*dx*lens_ipow(lambda, 3) + -0.00640517 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + 0.722321 *x*dx*lens_ipow(lambda, 4) + -2.72894e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*lambda + -1.86026e-09 *lens_ipow(x, 6)*lens_ipow(y, 2) + 0.0037559 *lens_ipow(x, 4)*lens_ipow(dy, 4)*lambda+0.0f;
const float dx12 =  + 1.93402 *y*dx + 1.53423 *x*dy + 53.272 *dx*dy + 0.234352 *x*y*lambda + 0.00830564 *lens_ipow(y, 3)*dx + 0.72744 *lens_ipow(y, 2)*dx*dy*lambda + -0.807132 *x*y*lens_ipow(lambda, 3) + -0.00640517 *lens_ipow(x, 3)*y*lens_ipow(dy, 2) + 0.722321 *x*y*lens_ipow(lambda, 4)+0.0f;
const float dx13 =  + 15.9053  + 0.174206 *lens_ipow(y, 2) + 10.864 *y*dy + 1.53423 *x*dx + 26.636 *lens_ipow(dx, 2) + 0.0508916 *lens_ipow(x, 2) + 184.79 *lens_ipow(dy, 2) + -10.1601 *y*dy*lambda + -181.421 *lens_ipow(dy, 2)*lambda + -0.0976647 *lens_ipow(y, 2)*lambda + -0.000238714 *lens_ipow(y, 4)*lambda + 0.36372 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.0128103 *lens_ipow(x, 3)*y*dx*dy + 0.327133 *lens_ipow(x, 4)*lens_ipow(dy, 4) + 0.0150236 *lens_ipow(x, 4)*y*lens_ipow(dy, 3)*lambda+0.0f;
const float dx14 =  + -0.377417 *y + 0.505046 *y*lambda + -5.08006 *y*lens_ipow(dy, 2) + -60.4737 *lens_ipow(dy, 3) + -0.0976647 *lens_ipow(y, 2)*dy + 0.234352 *x*y*dx + -0.000238714 *lens_ipow(y, 4)*dy + 0.36372 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -6.27167e-06 *lens_ipow(y, 5) + -2.4214 *x*y*dx*lens_ipow(lambda, 2) + 2.88928 *x*y*dx*lens_ipow(lambda, 3) + -5.45787e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + 0.0037559 *lens_ipow(x, 4)*y*lens_ipow(dy, 4)+0.0f;
const float dx20 =  + -0.026849  + 0.0120662 *lambda + -0.00827016 *lens_ipow(lambda, 2) + -1.03771e-05 *lens_ipow(y, 2) + 0.00186831 *lens_ipow(dy, 2) + 0.015388 *lens_ipow(dx, 2) + 0.000280643 *lens_ipow(x, 2)*lambda + -0.000784118 *x*dx*lambda + -0.000444342 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + -0.0221637 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -2.22251e-07 *lens_ipow(x, 4) + -0.00671039 *y*dy*lens_ipow(lambda, 2) + 0.0174403 *y*dy*lens_ipow(lambda, 3) + -5.90157e-06 *lens_ipow(x, 2)*y*dy*lambda + -1.12979e-05 *lens_ipow(x, 3)*dx*lambda + 1.35905e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2) + 0.000263128 *lens_ipow(x, 2)*lens_ipow(lambda, 4) + -0.0124094 *y*dy*lens_ipow(lambda, 4)+0.0f;
const float dx21 =  + -2.07541e-05 *x*y + 0.00028384 *y*dx + 0.0477328 *dx*dy*lambda + -0.0481053 *dx*dy*lens_ipow(lambda, 2) + -0.00671039 *x*dy*lens_ipow(lambda, 2) + 0.0174403 *x*dy*lens_ipow(lambda, 3) + -1.96719e-06 *lens_ipow(x, 3)*dy*lambda + 5.43619e-06 *x*lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.000178619 *lens_ipow(y, 3)*lens_ipow(dx, 3) + -0.0124094 *x*dy*lens_ipow(lambda, 4) + 0.00657155 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy*lambda+0.0f;
const float dx22 =  + -0.334003  + -0.0196292 *lambda + 1.49841 *lens_ipow(dx, 2) + 0.435908 *lens_ipow(dy, 2) + 0.0307761 *x*dx + 0.00014192 *lens_ipow(y, 2) + -0.000392059 *lens_ipow(x, 2)*lambda + 0.0477328 *y*dy*lambda + -0.0481053 *y*dy*lens_ipow(lambda, 2) + -0.0443274 *x*dx*lens_ipow(lambda, 2) + -2.82448e-06 *lens_ipow(x, 4)*lambda + 2.71809e-06 *x*lens_ipow(y, 4)*dx + 0.000133964 *lens_ipow(y, 4)*lens_ipow(dx, 2) + 0.00657155 *lens_ipow(y, 3)*lens_ipow(dx, 2)*dy*lambda + -13.5487 *lens_ipow(dx, 4)*lens_ipow(lambda, 3)+0.0f;
const float dx23 =  + 0.871816 *dx*dy + 0.00373661 *x*dy + 0.0477328 *y*dx*lambda + -0.0481053 *y*dx*lens_ipow(lambda, 2) + -0.00671039 *x*y*lens_ipow(lambda, 2) + 0.0174403 *x*y*lens_ipow(lambda, 3) + -1.96719e-06 *lens_ipow(x, 3)*y*lambda + -0.0124094 *x*y*lens_ipow(lambda, 4) + 0.00219052 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lambda+0.0f;
const float dx24 =  + 0.0120662 *x + -0.0196292 *dx + -0.0165403 *x*lambda + 9.35478e-05 *lens_ipow(x, 3) + -0.000392059 *lens_ipow(x, 2)*dx + 0.0477328 *y*dx*dy + -0.0962107 *y*dx*dy*lambda + -0.000296228 *lens_ipow(x, 3)*lambda + -0.0443274 *x*lens_ipow(dx, 2)*lambda + -0.0134208 *x*y*dy*lambda + 0.052321 *x*y*dy*lens_ipow(lambda, 2) + -1.96719e-06 *lens_ipow(x, 3)*y*dy + -2.82448e-06 *lens_ipow(x, 4)*dx + 0.000350838 *lens_ipow(x, 3)*lens_ipow(lambda, 3) + -0.0496375 *x*y*dy*lens_ipow(lambda, 3) + 0.00219052 *lens_ipow(y, 3)*lens_ipow(dx, 3)*dy + -8.12922 *lens_ipow(dx, 5)*lens_ipow(lambda, 2)+0.0f;
const float dx30 =  + 0.00896579 *dx*dy + 7.80803e-05 *x*y + -0.000677568 *x*dy + -2.51e-06 *lens_ipow(y, 3)*dx + -2.48612e-07 *x*lens_ipow(y, 3) + -5.77225e-06 *lens_ipow(x, 2)*y*dx + -3.94929e-07 *lens_ipow(x, 3)*y + -5.17297e-06 *x*lens_ipow(y, 2)*dy + -0.00445222 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 4) + 0.001543 *lens_ipow(x, 3)*lens_ipow(dy, 5)+0.0f;
const float dx31 =  + -0.0266125  + 0.0114614 *lambda + -0.00511334 *lens_ipow(dx, 2) + 0.0129436 *lens_ipow(dy, 2) + -0.00789395 *lens_ipow(lambda, 2) + 3.90402e-05 *lens_ipow(x, 2) + -0.00113546 *y*dy*lambda + 0.000166729 *lens_ipow(y, 2)*lambda + -7.52999e-06 *x*lens_ipow(y, 2)*dx + -3.72919e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.92408e-06 *lens_ipow(x, 3)*dx + -9.87323e-08 *lens_ipow(x, 4) + -5.17297e-06 *lens_ipow(x, 2)*y*dy + -0.0150597 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.0120177 *y*lens_ipow(dx, 2)*dy*lambda + -0.000650235 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + -1.79568e-09 *lens_ipow(y, 6) + 0.000596999 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + -0.00148407 *lens_ipow(x, 3)*dx*lens_ipow(dy, 4) + -6.08983e-10 *lens_ipow(y, 7)*dy + 0.0862054 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2)+0.0f;
const float dx32 =  + -0.0102267 *y*dx + 0.00896579 *x*dy + 0.954186 *dx*dy + -2.51e-06 *x*lens_ipow(y, 3) + -1.92408e-06 *lens_ipow(x, 3)*y + 0.0120177 *lens_ipow(y, 2)*dx*dy*lambda + -0.00148407 *lens_ipow(x, 3)*y*lens_ipow(dy, 4) + 0.11494 *lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 2)+0.0f;
const float dx33 =  + -0.334066  + -0.0170558 *lambda + 0.0258872 *y*dy + 0.00896579 *x*dx + 0.477093 *lens_ipow(dx, 2) + -0.000338784 *lens_ipow(x, 2) + 1.37398 *lens_ipow(dy, 2) + -0.000567731 *lens_ipow(y, 2)*lambda + -2.58648e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.0301195 *y*dy*lens_ipow(lambda, 2) + 0.00600884 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.0059363 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 3) + -7.61229e-11 *lens_ipow(y, 8) + 0.00192875 *lens_ipow(x, 4)*lens_ipow(dy, 4) + 0.0574702 *lens_ipow(y, 3)*lens_ipow(dx, 4)*dy+0.0f;
const float dx34 =  + -0.0170558 *dy + 0.0114614 *y + -0.0157879 *y*lambda + -0.000567731 *lens_ipow(y, 2)*dy + 5.55763e-05 *lens_ipow(y, 3) + -0.0301195 *y*lens_ipow(dy, 2)*lambda + 0.00600884 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.000650235 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + 0.000795999 *lens_ipow(y, 3)*lens_ipow(lambda, 3)+0.0f;
const float dx40 =  + -0.0815446 *lens_ipow(dx, 3) + -2.1476e-05 *x*y*dy + -0.00558635 *x*lens_ipow(dx, 2) + -9.83908e-05 *lens_ipow(x, 2)*dx + -0.160615 *dx*lens_ipow(dy, 2) + -9.03114e-07 *lens_ipow(x, 3) + -0.0025113 *y*dx*dy + -0.00198841 *x*lens_ipow(dy, 2) + -2.20023 *lens_ipow(dx, 5) + -0.636894 *x*lens_ipow(dx, 6) + 0.671785 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3)+0.0f;
const float dx41 =  + -0.000434464 *dy + -2.27987e-05 *y + -0.00132011 *y*lens_ipow(dx, 2) + -1.0738e-05 *lens_ipow(x, 2)*dy + -0.150544 *lens_ipow(dx, 2)*dy + -0.0025113 *x*dx*dy + -8.25626e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.00907399 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -0.358453 *y*lens_ipow(dy, 4) + -5.59084 *lens_ipow(dy, 5) + 0.671785 *x*lens_ipow(dx, 3)*lens_ipow(dy, 3)+0.0f;
const float dx42 =  + -0.00132011 *lens_ipow(y, 2)*dx + -0.244634 *x*lens_ipow(dx, 2) + -16.8848 *dx*lens_ipow(dy, 2) + -0.00558635 *lens_ipow(x, 2)*dx + -0.301088 *y*dx*dy + -3.27969e-05 *lens_ipow(x, 3) + -0.160615 *x*lens_ipow(dy, 2) + -0.0025113 *x*y*dy + -591.563 *lens_ipow(dx, 5) + -11.0011 *x*lens_ipow(dx, 4) + -1.91068 *lens_ipow(x, 2)*lens_ipow(dx, 5) + -5660.4 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 3157.4 *lens_ipow(dx, 7) + 2.01535 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 3)+0.0f;
const float dx43 =  + -0.000434464 *y + -16.8848 *lens_ipow(dx, 2)*dy + -1.0738e-05 *lens_ipow(x, 2)*y + -0.150544 *y*lens_ipow(dx, 2) + -0.32123 *x*dx*dy + -0.0025113 *x*y*dx + -0.00198841 *lens_ipow(x, 2)*dy + -4.12813e-05 *lens_ipow(y, 4)*dy + -0.00907399 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -525.674 *lens_ipow(dy, 5) + -0.716906 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -27.9542 *y*lens_ipow(dy, 4) + -5660.4 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 2.01535 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 2)+0.0f;
const float dx44 =  + 1.07795  + -3.60234 *lambda + 3.41998 *lens_ipow(lambda, 2) + -1.17565 *lens_ipow(lambda, 5)+0.0f;

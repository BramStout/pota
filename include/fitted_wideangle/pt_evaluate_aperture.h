const float out_x =  + 33.436 *dx + 0.620268 *x + -0.0997683 *x*lambda + -1.02423 *dx*lambda + 0.0779104 *x*y*dy + 0.11032 *lens_ipow(x, 2)*dx + 22.3258 *lens_ipow(dx, 3) + 0.066893 *x*lens_ipow(lambda, 2) + 28.7753 *dx*lens_ipow(dy, 2) + 0.00114721 *x*lens_ipow(y, 2) + 0.00104281 *lens_ipow(x, 3) + 1.05782 *x*lens_ipow(dy, 2) + 3.30806 *x*lens_ipow(dx, 2) + 0.622831 *dx*lens_ipow(lambda, 3) + 0.252479 *lens_ipow(y, 2)*dx*lambda + 15.3869 *y*dx*dy*lambda + 0.000265991 *lens_ipow(x, 4)*dx + 17.5869 *x*lens_ipow(dx, 4) + 0.849033 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -28.4185 *y*dx*dy*lens_ipow(lambda, 2) + 147.745 *lens_ipow(dx, 5) + 1.40136e-06 *lens_ipow(x, 5) + -0.469428 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + 0.020917 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 17.1989 *y*dx*dy*lens_ipow(lambda, 3) + 0.285723 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 3) + 4.60929e-13 *lens_ipow(x, 7)*lens_ipow(y, 4) + -3.19292e-09 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx*dy;
const float out_y =  + 0.620382 *y + 33.2697 *dy + -0.0988428 *y*lambda + 1.03903 *y*lens_ipow(dx, 2) + 0.108851 *lens_ipow(y, 2)*dy + 3.26034 *y*lens_ipow(dy, 2) + 2.71107 *x*dx*dy + 0.0773918 *x*y*dx + 28.2928 *lens_ipow(dx, 2)*dy + 0.0661776 *y*lens_ipow(lambda, 2) + 0.00113968 *lens_ipow(x, 2)*y + -1.94549 *dy*lens_ipow(lambda, 2) + 0.00102739 *lens_ipow(y, 3) + 0.0442643 *lens_ipow(x, 2)*dy + 21.7286 *lens_ipow(dy, 3) + 1.83525 *dy*lens_ipow(lambda, 3) + 0.000304092 *lens_ipow(y, 4)*dy + 156.877 *lens_ipow(dy, 5) + 0.920891 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 18.733 *y*lens_ipow(dy, 4) + 1.5905e-06 *lens_ipow(y, 5) + 0.0233247 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 9.47641e-06 *lens_ipow(y, 5)*lens_ipow(dx, 2) + 0.000414172 *lens_ipow(y, 4)*lens_ipow(dx, 2)*dy + 7.77217e-09 *x*lens_ipow(y, 7)*dx*lambda + 3.2448e-13 *lens_ipow(x, 2)*lens_ipow(y, 9) + 2.5744e-13 *lens_ipow(x, 8)*lens_ipow(y, 3) + 6.2086e-07 *x*lens_ipow(y, 6)*dx*dy*lens_ipow(lambda, 2);
const float out_dx =  + -0.028575 *x + -0.00932014 *x*lambda + -0.0549223 *y*dx*dy + 0.00203034 *lens_ipow(x, 2)*dx + -3.2338 *lens_ipow(dx, 3) + 0.00683675 *x*lens_ipow(lambda, 2) + 3.22939e-05 *x*lens_ipow(y, 2) + 3.53345e-05 *lens_ipow(x, 3) + -0.0206119 *x*lens_ipow(dy, 2) + -0.0612014 *x*lens_ipow(dx, 2) + 0.000172077 *lens_ipow(y, 2)*dx + -0.51415 *dx*lens_ipow(lambda, 2) + -0.0284093 *x*lens_ipow(dx, 2)*lambda + 0.50677 *dx*lens_ipow(lambda, 3) + -7.7071e-06 *x*lens_ipow(y, 2)*lambda + -1.47665e-05 *lens_ipow(x, 3)*lambda + 0.00842516 *x*y*dy*lambda + -0.00120913 *lens_ipow(x, 2)*dx*lambda + -17.3322 *dx*lens_ipow(dy, 2)*lambda + 25.3256 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.0171832 *x*y*dy*lens_ipow(lambda, 2) + 0.0109504 *x*y*dy*lens_ipow(lambda, 3) + -14.6692 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 1.3924e-14 *lens_ipow(x, 11) + 8.00155e-12 *lens_ipow(x, 7)*lens_ipow(y, 3)*dy + 2.8413e-13 *lens_ipow(x, 7)*lens_ipow(y, 4) + 1.22356e-12 *lens_ipow(x, 10)*dx + 1.62527e-11 *lens_ipow(x, 6)*lens_ipow(y, 4)*dx;
const float out_dy =  + -0.028835 *y + 0.0581261 *dy + -0.382108 *dy*lambda + -0.00834163 *y*lambda + -0.0206117 *y*lens_ipow(dx, 2) + 0.00200626 *lens_ipow(y, 2)*dy + -0.0624634 *y*lens_ipow(dy, 2) + -0.0548905 *x*dx*dy + 0.00124677 *x*y*dx + -3.2151 *lens_ipow(dx, 2)*dy + 0.00594847 *y*lens_ipow(lambda, 2) + 2.77024e-05 *lens_ipow(x, 2)*y + 0.266371 *dy*lens_ipow(lambda, 2) + 3.50767e-05 *lens_ipow(y, 3) + 0.000195321 *lens_ipow(x, 2)*dy + -3.20615 *lens_ipow(dy, 3) + -0.0275655 *y*lens_ipow(dy, 2)*lambda + -0.0012689 *lens_ipow(y, 2)*dy*lambda + -1.4775e-05 *lens_ipow(y, 3)*lambda + -0.00384855 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 4.9258e-10 *lens_ipow(y, 8)*dy + 3.13678e-12 *lens_ipow(y, 9) + 1.88125e-09 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy*lambda + 1.45253e-10 *lens_ipow(y, 9)*lens_ipow(dy, 2) + 1.06796e-13 *lens_ipow(x, 8)*lens_ipow(y, 3) + 6.69022e-12 *lens_ipow(x, 3)*lens_ipow(y, 7)*dx + 6.62722e-12 *lens_ipow(x, 7)*lens_ipow(y, 3)*dx + 2.23917e-13 *lens_ipow(x, 4)*lens_ipow(y, 7);
const float out_transmittance =  + 0.320781  + 1.70454 *lambda + -0.00126427 *y*dy + -0.00134272 *x*dx + -1.97407e-05 *lens_ipow(y, 2) + -0.0284443 *lens_ipow(dy, 2) + -1.36054e-05 *lens_ipow(x, 2) + -0.0376431 *lens_ipow(dx, 2) + -3.53125 *lens_ipow(lambda, 2) + 3.44418 *lens_ipow(lambda, 3) + -1.30264 *lens_ipow(lambda, 4) + -0.0107331 *y*lens_ipow(dy, 3) + 0.000361315 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -4.03098e-06 *lens_ipow(x, 2)*y*dy + -0.291264 *lens_ipow(dy, 4) + -2.64084e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -5.65467e-06 *lens_ipow(x, 3)*dx + -1.59427e-07 *lens_ipow(x, 4) + -0.223803 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -0.000130857 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -0.00667496 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -1.93625e-06 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -0.000386199 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.000223587 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*dy + -1.16389e-11 *lens_ipow(y, 8) + 0.000131862 *lens_ipow(x, 3)*y*dx*lens_ipow(dy, 3) + -2.95281e-10 *lens_ipow(y, 8)*lens_ipow(dy, 2) + -9.29602e-12 *lens_ipow(y, 9)*dy;

const float out_x =  + 47.9583 *dx + 0.726604 *x + 0.30773 *x*lambda + 10.0443 *dx*lambda + 0.51757 *y*dx*dy + 0.0130025 *x*y*dy + 0.0209696 *lens_ipow(x, 2)*dx + -0.428152 *x*lens_ipow(lambda, 2) + 0.0001599 *x*lens_ipow(y, 2) + 0.000146126 *lens_ipow(x, 3) + 0.109933 *x*lens_ipow(dy, 2) + 0.60574 *x*lens_ipow(dx, 2) + 0.00896142 *lens_ipow(y, 2)*dx + -10.4332 *dx*lens_ipow(lambda, 2) + 0.208867 *x*lens_ipow(lambda, 3) + 2.55743e-05 *lens_ipow(x, 4)*dx + 3.82423 *dx*lens_ipow(lambda, 4) + 2.4372e-07 *lens_ipow(x, 5) + -0.000238119 *lens_ipow(x, 2)*y*dx*dy + 0.000614863 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -3.80606e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.836959 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 2.60785e-08 *lens_ipow(x, 5)*lambda + 2.35096e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + -1.07059e-06 *lens_ipow(x, 4)*y*dx*dy*lambda + -3.9565e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 2) + 5.01276e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(lambda, 3) + -4.29584e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(lambda, 4);
const float out_y =  + 0.727662 *y + 47.9805 *dy + 9.94011 *dy*lambda + 0.303795 *y*lambda + 0.116675 *y*lens_ipow(dx, 2) + 0.0212751 *lens_ipow(y, 2)*dy + 0.606324 *y*lens_ipow(dy, 2) + 0.541493 *x*dx*dy + 0.0133007 *x*y*dx + 0.525397 *lens_ipow(dx, 2)*dy + -0.422576 *y*lens_ipow(lambda, 2) + 0.000155139 *lens_ipow(x, 2)*y + -10.2959 *dy*lens_ipow(lambda, 2) + 0.000145719 *lens_ipow(y, 3) + 0.00910908 *lens_ipow(x, 2)*dy + 0.205574 *y*lens_ipow(lambda, 3) + -0.000530731 *lens_ipow(y, 2)*dy*lambda + 9.11966e-06 *lens_ipow(x, 2)*y*lambda + 0.00188791 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -0.000453148 *x*lens_ipow(y, 2)*dx*dy + 3.75232 *dy*lens_ipow(lambda, 4) + 7.66467e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 0.54031 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.37653e-05 *lens_ipow(y, 4)*dy*lambda + 0.00104185 *lens_ipow(y, 3)*lens_ipow(dy, 2)*lambda + 4.47109e-07 *lens_ipow(y, 5)*lambda + 8.89044e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(lambda, 3) + -3.83891e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 4);
const float out_dx =  + 0.489166 *dx + -0.0138238 *x + 0.0158286 *x*lambda + 0.469504 *dx*lambda + 0.00808112 *y*dx*dy + 0.000528987 *x*y*dy + 0.000694739 *lens_ipow(x, 2)*dx + -0.341088 *lens_ipow(dx, 3) + -0.0220346 *x*lens_ipow(lambda, 2) + -0.33104 *dx*lens_ipow(dy, 2) + 6.53379e-06 *x*lens_ipow(y, 2) + 5.59884e-06 *lens_ipow(x, 3) + 0.00268339 *x*lens_ipow(dy, 2) + 0.00916356 *x*lens_ipow(dx, 2) + 0.00022903 *lens_ipow(y, 2)*dx + -0.4885 *dx*lens_ipow(lambda, 2) + 0.0107461 *x*lens_ipow(lambda, 3) + 3.4652e-07 *lens_ipow(x, 3)*lambda + 9.87083e-07 *lens_ipow(x, 4)*dx + 0.179614 *dx*lens_ipow(lambda, 4) + 1.02144e-08 *lens_ipow(x, 5) + 9.19451e-05 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 2.29793e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 0.0140785 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -27.9691 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + -8.02962e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 2.2643e-11 *lens_ipow(x, 3)*lens_ipow(y, 4)*lambda + 2.26493e-14 *lens_ipow(x, 7)*lens_ipow(y, 2);
const float out_dy =  + -0.0137889 *y + 0.490712 *dy + 0.461858 *dy*lambda + 0.0156755 *y*lambda + 0.00261594 *y*lens_ipow(dx, 2) + 0.000728088 *lens_ipow(y, 2)*dy + 0.00969924 *y*lens_ipow(dy, 2) + 0.00798963 *x*dx*dy + 0.000529122 *x*y*dx + -0.341312 *lens_ipow(dx, 2)*dy + -0.0217976 *y*lens_ipow(lambda, 2) + 6.30389e-06 *lens_ipow(x, 2)*y + -0.477862 *dy*lens_ipow(lambda, 2) + 5.9506e-06 *lens_ipow(y, 3) + 0.000227942 *lens_ipow(x, 2)*dy + -0.346063 *lens_ipow(dy, 3) + 0.01061 *y*lens_ipow(lambda, 3) + 4.20858e-07 *lens_ipow(y, 3)*lambda + 4.18636e-07 *lens_ipow(x, 2)*y*lambda + 7.75236e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 0.173747 *dy*lens_ipow(lambda, 4) + 4.92036e-11 *lens_ipow(y, 7) + 4.91915e-09 *lens_ipow(y, 6)*dy + 1.20536e-07 *lens_ipow(y, 5)*lens_ipow(dy, 2) + 0.00352233 *x*y*dx*lens_ipow(dy, 4) + 2.7495e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + -9.16196e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + -4051.9 *lens_ipow(dx, 4)*lens_ipow(dy, 7);
const float out_transmittance =  + 0.710856  + 0.616349 *lambda + -0.000353475 *y*dy + -8.22542e-06 *lens_ipow(y, 2) + -1.28287 *lens_ipow(lambda, 2) + -0.000122315 *x*dx*lambda + 1.25472 *lens_ipow(lambda, 3) + -0.475443 *lens_ipow(lambda, 4) + -0.45218 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.22125e-05 *lens_ipow(x, 2)*y*dy + -0.131815 *lens_ipow(dy, 4) + -1.20825e-05 *x*lens_ipow(y, 2)*dx + -5.15749e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.00045034 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -2.17057e-05 *lens_ipow(x, 3)*dx + -2.99065e-07 *lens_ipow(x, 4) + -3.84723e-10 *lens_ipow(x, 6) + -1.83888e-08 *lens_ipow(x, 5)*dx + -1.08422e-07 *lens_ipow(y, 5)*dy + -2.12921e-09 *lens_ipow(y, 6) + 6.06326e-11 *lens_ipow(y, 6)*lambda + 2.91691e-09 *x*lens_ipow(y, 5)*dx*dy + -1.68399e-05 *lens_ipow(y, 4)*lens_ipow(dy, 4) + 1.36108e-12 *lens_ipow(y, 8) + -1.36677e-12 *lens_ipow(x, 2)*lens_ipow(y, 6) + 0.117746 *lens_ipow(y, 2)*lens_ipow(dy, 8) + 7.69417e-11 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx*dy + -3.0107e-14 *lens_ipow(x, 6)*lens_ipow(y, 4);

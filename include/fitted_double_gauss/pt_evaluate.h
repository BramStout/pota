const float out_x =  + 100.12 *dx + 0.592582 *x + 0.0499465 *x*lambda + -0.811097 *dx*lambda + 0.0323359 *x*y*dy + 0.0379048 *lens_ipow(x, 2)*dx + -42.7325 *lens_ipow(dx, 3) + -0.0389817 *x*lens_ipow(lambda, 2) + 0.000142213 *x*lens_ipow(y, 2) + 0.000142435 *lens_ipow(x, 3) + 1.67656 *x*lens_ipow(dy, 2) + 1.81407 *x*lens_ipow(dx, 2) + 0.00570726 *lens_ipow(y, 2)*dx + -209.372 *dx*lens_ipow(dy, 2)*lambda + 0.677473 *y*dx*dy*lambda + -0.536195 *y*dx*dy*lens_ipow(lambda, 2) + 299.926 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.0713542 *x*y*lens_ipow(dy, 3)*lambda + 0.00125855 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda + -3.55319 *x*lens_ipow(dx, 4)*lambda + 222.317 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -0.000266069 *lens_ipow(y, 3)*dx*dy*lambda + -5.3226e-06 *lens_ipow(x, 3)*y*dy*lambda + 0.00102282 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lambda + -168.54 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + -3.93679e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*lambda + 1.32918e-08 *lens_ipow(x, 6)*dx*lambda + -2.70347e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx*lambda;
const float out_y =  + 0.588556 *y + 99.6889 *dy + 0.0557925 *y*lambda + 1.62675 *y*lens_ipow(dx, 2) + 0.045876 *lens_ipow(y, 2)*dy + 2.49363 *y*lens_ipow(dy, 2) + 0.153878 *x*dx*dy + 0.0314574 *x*y*dx + -42.0967 *lens_ipow(dx, 2)*dy + -0.0358604 *y*lens_ipow(lambda, 2) + 0.000141395 *lens_ipow(x, 2)*y + 0.000178882 *lens_ipow(y, 3) + 0.00572629 *lens_ipow(x, 2)*dy + -1.35881 *y*lens_ipow(dy, 2)*lambda + -135.315 *lens_ipow(dy, 3)*lambda + -0.0168528 *lens_ipow(y, 2)*dy*lambda + -6.88134e-05 *lens_ipow(y, 3)*lambda + 120.172 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 9.10801e-06 *lens_ipow(y, 4)*dy + 0.0748529 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 106.566 *lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.000223543 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.00161417 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 0.000235019 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lambda + 0.681351 *lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + -0.000143401 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -9.81214e-11 *lens_ipow(x, 4)*lens_ipow(y, 3) + -56.6549 *lens_ipow(dy, 3)*lens_ipow(lambda, 6);
const float out_dx =  + -3.05455 *dx + -0.0282279 *x + -0.000260254 *x*lambda + 0.150251 *dx*lambda + -0.193971 *y*dx*dy + -0.00214261 *x*y*dy + -0.000343775 *lens_ipow(x, 2)*dx + 1.28863 *lens_ipow(dx, 3) + -13.7923 *dx*lens_ipow(dy, 2) + -6.63026e-06 *x*lens_ipow(y, 2) + -0.144619 *x*lens_ipow(dy, 2) + -0.0045328 *x*lens_ipow(dx, 2) + -0.000631766 *lens_ipow(y, 2)*dx + -0.108421 *dx*lens_ipow(lambda, 2) + -7.70575e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + -0.119872 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 3.23657e-05 *lens_ipow(x, 3)*lens_ipow(lambda, 4) + 2457.14 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + -0.00163849 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.274907 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + 49.9949 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -4.84099e-06 *lens_ipow(x, 3)*y*lens_ipow(dy, 3) + 1.54348e-06 *lens_ipow(y, 4)*lens_ipow(dx, 3)*lambda + -2.83936e-05 *lens_ipow(x, 3)*lens_ipow(lambda, 5) + -543.956 *x*lens_ipow(dx, 2)*lens_ipow(dy, 6) + -3.42461 *lens_ipow(x, 2)*dx*lens_ipow(dy, 6) + -25109 *lens_ipow(dx, 3)*lens_ipow(dy, 6) + -0.0503811 *lens_ipow(x, 3)*lens_ipow(dy, 8);
const float out_dy =  + -0.0282638 *y + -3.02557 *dy + 0.0262125 *dy*lambda + -0.000273248 *y*lambda + 0.0476166 *y*lens_ipow(dx, 2) + -0.00028279 *lens_ipow(y, 2)*dy + 0.278569 *x*dx*dy + 0.000913623 *x*y*dx + 16.1714 *lens_ipow(dx, 2)*dy + 5.08174e-06 *lens_ipow(x, 2)*y + 0.00117665 *lens_ipow(x, 2)*dy + 5.85395 *lens_ipow(dy, 3)*lambda + -1.29969e-06 *lens_ipow(y, 3)*lambda + -0.391177 *x*lens_ipow(dx, 3)*dy + 58.129 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -5.96864e-07 *x*lens_ipow(y, 3)*dx + 1.32679 *x*dx*lens_ipow(dy, 3) + 0.0182734 *x*y*dx*lens_ipow(dy, 2) + -3.19863e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + -6.23406 *lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -2.7888e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 0.786317 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00738819 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 1.77456e-05 *lens_ipow(x, 3)*dx*dy + -23.2769 *lens_ipow(dx, 4)*dy + 0.000103722 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 2.39665e-06 *lens_ipow(y, 3)*lens_ipow(lambda, 5) + 2.99896 *lens_ipow(dy, 3)*lens_ipow(lambda, 6);
const float out_transmittance =  + 3.76112 *lambda + 0.000259609 *y*dy + 0.000266756 *x*dx + 0.0168177 *lens_ipow(dy, 2) + 0.0171709 *lens_ipow(dx, 2) + -10.7968 *lens_ipow(lambda, 2) + 16.4369 *lens_ipow(lambda, 3) + -12.9412 *lens_ipow(lambda, 4) + -7.32614 *lens_ipow(dx, 4) + -0.267851 *y*lens_ipow(dy, 3) + -0.00124542 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.268464 *x*lens_ipow(dx, 3) + -14.667 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.35604e-05 *lens_ipow(x, 2)*y*dy + -7.31341 *lens_ipow(dy, 4) + -2.35063e-05 *x*lens_ipow(y, 2)*dx + -1.1016e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -5.37091e-08 *lens_ipow(y, 4) + -0.003764 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.268213 *y*lens_ipow(dx, 2)*dy + -2.36431e-05 *lens_ipow(x, 3)*dx + -0.00375249 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.26844 *x*dx*lens_ipow(dy, 2) + -5.39032e-08 *lens_ipow(x, 4) + -0.00500763 *x*y*dx*dy + -0.00124868 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -2.35432e-05 *lens_ipow(y, 3)*dy + 4.15947 *lens_ipow(lambda, 5);

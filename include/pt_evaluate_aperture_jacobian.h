const float dx00 =  + 1  + 4.83911e-08 *y*dx*dy*lambda + 1.29119e-10 *lens_ipow(y, 2)*dy*lambda + -5.54182e-10 *lens_ipow(y, 2)*dx*dy + 2.77107e-09 *lens_ipow(x, 2)*dx*dy*lambda + -5.57318e-09 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 1.66193e-08 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -6.86699e-11 *lens_ipow(y, 3)*dx*dy + 2.4149e-06 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -9.64278e-06 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2)+0.0f;
const float dx01 =  + 4.96919e-06 *dx*lens_ipow(dy, 2)*lambda + 4.83911e-08 *x*dx*dy*lambda + 2.58238e-10 *x*y*dy*lambda + -1.10836e-09 *x*y*dx*dy + -1.02833e-05 *dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -2.0601e-10 *x*lens_ipow(y, 2)*dx*dy+0.0f;
const float dx02 =  + 105  + 1.39872e-05 *dy*lambda + -0.000322832 *lens_ipow(dx, 2)*dy + -4.71532e-05 *dy*lens_ipow(lambda, 3) + -5.90048e-05 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.00163836 *lens_ipow(dx, 4) + 4.96919e-06 *y*lens_ipow(dy, 2)*lambda + 4.83911e-08 *x*y*dy*lambda + -5.54182e-10 *x*lens_ipow(y, 2)*dy + -1.02833e-05 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.000467913 *lens_ipow(dx, 5) + 0.00353368 *lens_ipow(dx, 4)*lambda + 9.23689e-10 *lens_ipow(x, 3)*dy*lambda + -1.85773e-09 *lens_ipow(x, 3)*lens_ipow(dy, 2) + 1.10795e-08 *lens_ipow(x, 3)*dx*dy + -6.86699e-11 *x*lens_ipow(y, 3)*dy + 2.4149e-06 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.92856e-05 *x*dx*dy*lens_ipow(lambda, 2)+0.0f;
const float dx03 =  + 1.39872e-05 *dx*lambda + -0.000107611 *lens_ipow(dx, 3) + -4.71532e-05 *dx*lens_ipow(lambda, 3) + 9.93837e-06 *y*dx*dy*lambda + 4.83911e-08 *x*y*dx*lambda + 1.29119e-10 *x*lens_ipow(y, 2)*lambda + -5.54182e-10 *x*lens_ipow(y, 2)*dx + -2.05667e-05 *y*dx*dy*lens_ipow(lambda, 2) + 9.23689e-10 *lens_ipow(x, 3)*dx*lambda + -3.71545e-09 *lens_ipow(x, 3)*dx*dy + 5.53975e-09 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -6.86699e-11 *x*lens_ipow(y, 3)*dx + 4.82981e-06 *x*dx*dy*lens_ipow(lambda, 2) + -9.64278e-06 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx04 =  + 1.39872e-05 *dx*dy + -0.00014146 *dx*dy*lens_ipow(lambda, 2) + -3.93365e-05 *lens_ipow(dx, 3)*lambda + 4.96919e-06 *y*dx*lens_ipow(dy, 2) + 4.83911e-08 *x*y*dx*dy + 1.29119e-10 *x*lens_ipow(y, 2)*dy + -2.05667e-05 *y*dx*lens_ipow(dy, 2)*lambda + 0.000706735 *lens_ipow(dx, 5) + 9.23689e-10 *lens_ipow(x, 3)*dx*dy + 4.82981e-06 *x*dx*lens_ipow(dy, 2)*lambda + -1.92856e-05 *x*lens_ipow(dx, 2)*dy*lambda+0.0f;
const float dx10 =  + -5.0963e-09 *y*dx*lens_ipow(lambda, 2) + -1.19288e-10 *lens_ipow(x, 3)*dy + 1.62525e-08 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -4.76726e-07 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.40938e-12 *lens_ipow(x, 3)*y*dy + -5.53019e-08 *x*dy*lens_ipow(lambda, 3) + 1.53508e-06 *x*dx*lens_ipow(dy, 3) + -1.22358e-09 *x*y*dy*lens_ipow(lambda, 2) + -3.4467e-06 *lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 3.60184e-10 *lens_ipow(x, 3)*dy*lambda+0.0f;
const float dx11 =  + 1  + 2.30474e-08 *y*dx*dy + -5.0963e-09 *x*dx*lens_ipow(lambda, 2) + -4.76726e-07 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 8.52346e-13 *lens_ipow(x, 4)*dy + -6.11788e-10 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + -1.62857e-10 *lens_ipow(y, 2)*lens_ipow(lambda, 3) + 2.94531e-08 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -8.56575e-05 *dx*lens_ipow(dy, 4)+0.0f;
const float dx12 =  + 1.15237e-08 *lens_ipow(y, 2)*dy + -5.0963e-09 *x*y*lens_ipow(lambda, 2) + -9.53452e-07 *x*y*dx*lens_ipow(dy, 2) + 4.74145e-05 *dx*dy*lens_ipow(lambda, 3) + -0.00440305 *lens_ipow(dy, 5) + 7.67541e-07 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 9.81771e-09 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -8.56575e-05 *y*lens_ipow(dy, 4)+0.0f;
const float dx13 =  + 105  + 1.15237e-08 *lens_ipow(y, 2)*dx + 6.2476e-05 *dy*lens_ipow(lambda, 3) + -2.98221e-11 *lens_ipow(x, 4) + 1.62525e-08 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -9.53452e-07 *x*y*lens_ipow(dx, 2)*dy + -0.000109654 *dy*lens_ipow(lambda, 4) + 8.52346e-13 *lens_ipow(x, 4)*y + -2.7651e-08 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + 2.37073e-05 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -0.0220152 *dx*lens_ipow(dy, 4) + 2.30262e-06 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -6.11788e-10 *lens_ipow(x, 2)*y*lens_ipow(lambda, 2) + 1.96354e-08 *lens_ipow(y, 3)*dx*dy + -1.03401e-05 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 9.00461e-11 *lens_ipow(x, 4)*lambda + -0.00034263 *y*dx*lens_ipow(dy, 3)+0.0f;
const float dx14 =  + 9.3714e-05 *lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.01926e-08 *x*y*dx*lambda + -0.000219308 *lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -8.29529e-08 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + 7.11218e-05 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -1.22358e-09 *lens_ipow(x, 2)*y*dy*lambda + -1.62857e-10 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + -6.8934e-06 *x*lens_ipow(dy, 3)*lambda + 9.00461e-11 *lens_ipow(x, 4)*dy+0.0f;
const float dx20 =  + -1.19146e-10 *x*lens_ipow(dy, 2) + 2.12297e-08 *lens_ipow(dx, 2)*dy + -9.69091e-08 *lens_ipow(dx, 2)*dy*lambda + 1.40817e-07 *lens_ipow(dx, 4) + -8.91675e-11 *y*lens_ipow(dx, 2)*lambda + -3.79919e-12 *lens_ipow(x, 3)*dx*dy + -1.00611e-09 *y*lens_ipow(dx, 3)*lambda + 4.45695e-09 *x*lens_ipow(dx, 3)*lambda + -4.13028e-11 *x*y*lens_ipow(dy, 3)+0.0f;
const float dx21 =  + -1.75904e-11 *lens_ipow(y, 2)*dx*lambda + -2.3344e-11 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -8.91675e-11 *x*lens_ipow(dx, 2)*lambda + -1.00611e-09 *x*lens_ipow(dx, 3)*lambda + -2.06514e-11 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -9.34006e-13 *lens_ipow(y, 3)*dx*lambda + 4.60509e-14 *lens_ipow(y, 4)*dx + 4.08702e-10 *y*dx*lens_ipow(lambda, 3)+0.0f;
const float dx22 =  + 1  + 7.62831e-07 *lens_ipow(dx, 2) + 4.24595e-08 *x*dx*dy + -3.81579e-06 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -5.86347e-12 *lens_ipow(y, 3)*lambda + -1.55627e-11 *lens_ipow(y, 3)*dx + -1.93818e-07 *x*dx*dy*lambda + 5.63269e-07 *x*lens_ipow(dx, 3) + -1.78335e-10 *x*y*dx*lambda + -9.49798e-13 *lens_ipow(x, 4)*dy + -3.01833e-09 *x*y*lens_ipow(dx, 2)*lambda + 4.99125e-05 *lens_ipow(dx, 4)*lambda + -1.2706e-05 *lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + 6.68542e-09 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lambda + -2.33501e-13 *lens_ipow(y, 4)*lambda + 9.21017e-15 *lens_ipow(y, 5) + 2.04351e-10 *lens_ipow(y, 2)*lens_ipow(lambda, 3)+0.0f;
const float dx23 =  + -1.19146e-10 *lens_ipow(x, 2)*dy + 2.12297e-08 *x*lens_ipow(dx, 2) + -9.69091e-08 *x*lens_ipow(dx, 2)*lambda + -9.49798e-13 *lens_ipow(x, 4)*dx + -4.23534e-06 *lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -6.19543e-11 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)+0.0f;
const float dx24 =  + -2.54386e-06 *lens_ipow(dx, 3)*lambda + -5.86347e-12 *lens_ipow(y, 3)*dx + -9.69091e-08 *x*lens_ipow(dx, 2)*dy + -8.91675e-11 *x*y*lens_ipow(dx, 2) + -1.00611e-09 *x*y*lens_ipow(dx, 3) + 9.98251e-06 *lens_ipow(dx, 5) + -8.47068e-06 *lens_ipow(dx, 3)*dy*lambda + 2.22847e-09 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 1.10011e-08 *lens_ipow(lambda, 5) + -2.33501e-13 *lens_ipow(y, 4)*dx + 6.13053e-10 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2)+0.0f;
const float dx30 =  + -1.49217e-11 *x*dx + 4.48188e-09 *dx*dy*lambda + 4.70791e-08 *lens_ipow(dy, 3) + 7.50076e-09 *dx*lens_ipow(dy, 2) + 2.09064e-09 *y*lens_ipow(dy, 2)*lambda + -4.01118e-09 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 3.31164e-09 *y*lens_ipow(dy, 4) + 3.58028e-14 *lens_ipow(x, 3)*y*dy + 2.71208e-09 *x*lens_ipow(dx, 2)*dy*lambda + -1.24008e-10 *x*y*lens_ipow(dy, 3) + -1.35765e-07 *lens_ipow(dy, 3)*lens_ipow(lambda, 2)+0.0f;
const float dx31 =  + -2.06579e-08 *lens_ipow(dy, 3)*lambda + 3.38362e-09 *y*dx*lens_ipow(dy, 2) + 2.09064e-09 *x*lens_ipow(dy, 2)*lambda + 3.76587e-07 *dx*lens_ipow(dy, 3)*lambda + -4.01118e-09 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 3.31164e-09 *x*lens_ipow(dy, 4) + 8.95071e-15 *lens_ipow(x, 4)*dy + -6.2004e-11 *lens_ipow(x, 2)*lens_ipow(dy, 3)+0.0f;
const float dx32 =  + -7.46083e-12 *lens_ipow(x, 2) + 4.48188e-09 *x*dy*lambda + 7.50076e-09 *x*lens_ipow(dy, 2) + 7.33864e-07 *lens_ipow(dy, 3) + 1.69181e-09 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 3.76587e-07 *y*lens_ipow(dy, 3)*lambda + -1.31655e-05 *lens_ipow(dy, 5) + 1.28709e-05 *lens_ipow(dy, 4)*lambda + 2.71208e-09 *lens_ipow(x, 2)*dx*dy*lambda+0.0f;
const float dx33 =  + 1  + 1.2664e-07 *dy*lens_ipow(lambda, 2) + 4.48188e-09 *x*dx*lambda + 1.41237e-07 *x*lens_ipow(dy, 2) + 1.50015e-08 *x*dx*dy + 2.20159e-06 *dx*lens_ipow(dy, 2) + -6.19738e-08 *y*lens_ipow(dy, 2)*lambda + 3.38362e-09 *lens_ipow(y, 2)*dx*dy + 4.18127e-09 *x*y*dy*lambda + 1.12976e-06 *y*dx*lens_ipow(dy, 2)*lambda + -1.2102e-05 *lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -8.02237e-09 *x*y*dy*lens_ipow(lambda, 2) + 1.32466e-08 *x*y*lens_ipow(dy, 3) + 8.95071e-15 *lens_ipow(x, 4)*y + -6.58273e-05 *dx*lens_ipow(dy, 4) + 5.14835e-05 *dx*lens_ipow(dy, 3)*lambda + 1.35604e-09 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lambda + -1.86012e-10 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -4.07296e-07 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx34 =  + 1.2664e-07 *lens_ipow(dy, 2)*lambda + 4.48188e-09 *x*dx*dy + -2.06579e-08 *y*lens_ipow(dy, 3) + 2.09064e-09 *x*y*lens_ipow(dy, 2) + 3.76587e-07 *y*dx*lens_ipow(dy, 3) + -6.05101e-06 *lens_ipow(dy, 4)*lambda + -8.02237e-09 *x*y*lens_ipow(dy, 2)*lambda + 1.28709e-05 *dx*lens_ipow(dy, 4) + 1.35604e-09 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -2.71531e-07 *x*lens_ipow(dy, 3)*lambda+0.0f;
const float dx40 =  + -3.18157e-19  + 2.25151e-19 *x*dy*lambda + 9.45844e-22 *lens_ipow(x, 2)*y + -3.40935e-18 *dy*lens_ipow(lambda, 2) + -3.78046e-17 *lens_ipow(dy, 3)*lambda + -1.73472e-18 *y*lens_ipow(dx, 3) + 1.31209e-18 *x*dx*lens_ipow(dy, 2)*lambda + 3.5532e-17 *lens_ipow(dy, 2)*lens_ipow(lambda, 3)+0.0f;
const float dx41 =  + -1.0571e-18  + 3.46945e-18 *lens_ipow(lambda, 2) + -4.76227e-18 *dx*lambda + -3.40526e-17 *dx*dy*lambda + 3.15281e-22 *lens_ipow(x, 3) + 3.21396e-18 *y*lens_ipow(dx, 3) + -1.73472e-18 *x*lens_ipow(dx, 3)+0.0f;
const float dx42 =  + 2.03129e-15 *dx*dy + -4.76227e-18 *y*lambda + -3.40526e-17 *y*dy*lambda + -6.87536e-15 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -2.96213e-14 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.82094e-18 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -5.20417e-18 *x*y*lens_ipow(dx, 2) + 6.56045e-19 *lens_ipow(x, 2)*lens_ipow(dy, 2)*lambda+0.0f;
const float dx43 =  + -1.16755e-17  + 1.01564e-15 *lens_ipow(dx, 2) + 1.12575e-19 *lens_ipow(x, 2)*lambda + -3.40526e-17 *y*dx*lambda + -3.40935e-18 *x*lens_ipow(lambda, 2) + -1.97475e-14 *lens_ipow(dx, 3)*dy + -1.13414e-16 *x*lens_ipow(dy, 2)*lambda + 1.31209e-18 *lens_ipow(x, 2)*dx*dy*lambda + 7.10641e-17 *x*dy*lens_ipow(lambda, 3)+0.0f;
const float dx44 =  + 9.92829e-20  + 6.93889e-18 *y*lambda + -4.76227e-18 *y*dx + 1.12575e-19 *lens_ipow(x, 2)*dy + -3.40526e-17 *y*dx*dy + 1.18576e-18 *lens_ipow(lambda, 3) + -6.8187e-18 *x*dy*lambda + -4.58357e-15 *lens_ipow(dx, 3)*lambda + -3.78046e-17 *x*lens_ipow(dy, 3) + 6.56045e-19 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 1.06596e-16 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;

const float out_x =  + 86.4597 *dx + 0.719396 *x + 0.0979591 *x*lambda + 8.40417 *dx*lambda + 1.78167 *y*dx*dy + 0.0257671 *x*y*dy + 0.0365674 *lens_ipow(x, 2)*dx + 62.77 *lens_ipow(dx, 3) + -0.0678272 *x*lens_ipow(lambda, 2) + 61.8597 *dx*lens_ipow(dy, 2) + 0.000121639 *lens_ipow(x, 3) + 1.17733 *x*lens_ipow(dy, 2) + 2.99936 *x*lens_ipow(dx, 2) + -5.77614 *dx*lens_ipow(lambda, 2) + 0.000597495 *x*lens_ipow(y, 2)*lambda + 0.0513483 *lens_ipow(y, 2)*dx*lambda + -2.93686e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + -1.06328 *y*lens_ipow(dx, 3)*dy + -0.000817827 *x*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 0.000144399 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -3.17616e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -0.0703785 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -4.22067 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -291.864 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + 0.000444537 *x*lens_ipow(y, 2)*lens_ipow(lambda, 4) + 0.0381449 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 4) + -138191 *lens_ipow(dx, 11) + -2398.77 *x*lens_ipow(dx, 10);
const float out_y =  + 0.720977 *y + 86.5823 *dy + 8.22068 *dy*lambda + 0.0941827 *y*lambda + 1.19424 *y*lens_ipow(dx, 2) + 0.0319703 *lens_ipow(y, 2)*dy + 2.60607 *y*lens_ipow(dy, 2) + 1.75108 *x*dx*dy + 0.0257636 *x*y*dx + 60.72 *lens_ipow(dx, 2)*dy + -0.064435 *y*lens_ipow(lambda, 2) + -5.61868 *dy*lens_ipow(lambda, 2) + 0.00010636 *lens_ipow(y, 3) + 52.0013 *lens_ipow(dy, 3) + 0.0503633 *lens_ipow(x, 2)*dy*lambda + 0.000582882 *lens_ipow(x, 2)*y*lambda + -0.000793167 *lens_ipow(x, 2)*y*lens_ipow(lambda, 2) + 3.17233e-05 *lens_ipow(y, 4)*dy + 325.173 *lens_ipow(dy, 5) + 0.525617 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 21.4899 *y*lens_ipow(dy, 4) + -0.0692483 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2) + 6.06448e-08 *lens_ipow(y, 5) + 0.00599174 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -71.8423 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + -1.48937 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 0.0373362 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 4) + 0.000422188 *lens_ipow(x, 2)*y*lens_ipow(lambda, 4);
const float out_dx =  + 2.05505 *dx + 0.00423523 *x + -0.00636248 *x*lambda + -2.05391 *dx*lambda + 0.133439 *y*dx*dy + 0.00145282 *x*y*dy + 0.00223387 *lens_ipow(x, 2)*dx + 8.1081 *lens_ipow(dx, 3) + 7.82256 *dx*lens_ipow(dy, 2) + 7.68026e-06 *x*lens_ipow(y, 2) + 7.94055e-06 *lens_ipow(x, 3) + 0.0732182 *x*lens_ipow(dy, 2) + 0.211126 *x*lens_ipow(dx, 2) + 0.00073199 *lens_ipow(y, 2)*dx + 2.92184 *dx*lens_ipow(lambda, 2) + -1.44902 *dx*lens_ipow(lambda, 3) + -1.98384 *lens_ipow(dx, 3)*lambda + -0.00675267 *x*lens_ipow(dy, 2)*lambda + 0.0134151 *x*lens_ipow(lambda, 3) + -1.49821 *dx*lens_ipow(dy, 2)*lambda + -0.0239387 *x*lens_ipow(dx, 4) + -0.011796 *y*dx*dy*lens_ipow(lambda, 2) + 7.49172e-07 *x*lens_ipow(y, 2)*lens_ipow(lambda, 2) + -0.0348161 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.0103739 *x*lens_ipow(lambda, 4) + 2.8302 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.0002496 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 3) + 12.6952 *dx*lens_ipow(dy, 6);
const float out_dy =  + 0.00354816 *y + 1.95925 *dy + -1.54235 *dy*lambda + -0.00456985 *y*lambda + 0.0775613 *y*lens_ipow(dx, 2) + 0.00247787 *lens_ipow(y, 2)*dy + 0.234202 *y*lens_ipow(dy, 2) + 0.138058 *x*dx*dy + 0.00149723 *x*y*dx + 8.34829 *lens_ipow(dx, 2)*dy + 0.00325748 *y*lens_ipow(lambda, 2) + 7.90658e-06 *lens_ipow(x, 2)*y + 1.98075 *dy*lens_ipow(lambda, 2) + 8.78797e-06 *lens_ipow(y, 3) + 0.000750838 *lens_ipow(x, 2)*dy + 8.56854 *lens_ipow(dy, 3) + -0.0640071 *y*lens_ipow(dy, 2)*lambda + -0.0144772 *y*lens_ipow(dx, 2)*lambda + -2.30067 *lens_ipow(dx, 2)*dy*lambda + -2.80935 *lens_ipow(dy, 3)*lambda + -0.000534787 *lens_ipow(y, 2)*dy*lambda + -0.859733 *dy*lens_ipow(lambda, 3) + -1.55283e-06 *lens_ipow(y, 3)*lambda + -0.0267553 *x*dx*dy*lens_ipow(lambda, 2) + -0.000142302 *x*y*dx*lens_ipow(lambda, 2) + -0.000105238 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 3) + 9.95066 *lens_ipow(dy, 7) + -12.2781 *y*lens_ipow(dx, 4)*lens_ipow(dy, 4);
const float out_transmittance =  + 0.648068  + 0.506251 *lambda + -0.699655 *lens_ipow(lambda, 2) + 0.340207 *lens_ipow(lambda, 3) + -4.42483 *lens_ipow(dx, 4) + -0.015176 *y*lens_ipow(dy, 3) + -0.000965267 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.151437 *x*lens_ipow(dx, 3) + -11.3799 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.1192e-05 *lens_ipow(x, 2)*y*dy + -1.24232 *lens_ipow(dy, 4) + -2.10462e-05 *x*lens_ipow(y, 2)*dx + -1.31339e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.00220788 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.194106 *y*lens_ipow(dx, 2)*dy + -1.65411e-05 *lens_ipow(x, 3)*dx + -0.189039 *x*dx*lens_ipow(dy, 2) + -5.12456e-08 *lens_ipow(x, 4) + -0.00374573 *x*y*dx*dy + -0.000941859 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -2.43061e-05 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -2.30787 *lens_ipow(dx, 6) + -0.00295195 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -1.11429e-07 *lens_ipow(y, 5)*dy + -137.359 *lens_ipow(dy, 6) + -2.35409e-10 *lens_ipow(y, 6) + -0.208788 *lens_ipow(y, 2)*lens_ipow(dy, 4) + -8.13335 *y*lens_ipow(dy, 5);

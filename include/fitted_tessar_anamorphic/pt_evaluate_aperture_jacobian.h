const float dx00 =  + 0.719396  + 0.0979591 *lambda + 0.0257671 *y*dy + 0.0731349 *x*dx + -0.0678272 *lens_ipow(lambda, 2) + 0.000364918 *lens_ipow(x, 2) + 1.17733 *lens_ipow(dy, 2) + 2.99936 *lens_ipow(dx, 2) + 0.000597495 *lens_ipow(y, 2)*lambda + -8.81058e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000817827 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + 0.000433198 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -6.35231e-06 *x*lens_ipow(y, 2)*dx + -4.22067 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 0.000444537 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + -2398.77 *lens_ipow(dx, 10)+0.0f;
const float dx01 =  + 1.78167 *dx*dy + 0.0257671 *x*dy + 0.00119499 *x*y*lambda + 0.102697 *y*dx*lambda + -5.87372e-08 *lens_ipow(x, 3)*y + -1.06328 *lens_ipow(dx, 3)*dy + -0.00163565 *x*y*lens_ipow(lambda, 2) + -6.35231e-06 *lens_ipow(x, 2)*y*dx + -0.140757 *y*dx*lens_ipow(lambda, 2) + 0.000889073 *x*y*lens_ipow(lambda, 4) + 0.0762899 *y*dx*lens_ipow(lambda, 4)+0.0f;
const float dx02 =  + 86.4597  + 8.40417 *lambda + 1.78167 *y*dy + 0.0365674 *lens_ipow(x, 2) + 188.31 *lens_ipow(dx, 2) + 61.8597 *lens_ipow(dy, 2) + 5.99872 *x*dx + -5.77614 *lens_ipow(lambda, 2) + 0.0513483 *lens_ipow(y, 2)*lambda + -3.18983 *y*lens_ipow(dx, 2)*dy + -3.17616e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.0703785 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -8.44134 *x*dx*lens_ipow(dy, 2)*lambda + -875.592 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 0.0381449 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + -1.5201e+06 *lens_ipow(dx, 10) + -23987.7 *x*lens_ipow(dx, 9)+0.0f;
const float dx03 =  + 1.78167 *y*dx + 0.0257671 *x*y + 123.719 *dx*dy + 2.35466 *x*dy + -1.06328 *y*lens_ipow(dx, 3) + 0.000288799 *lens_ipow(x, 3)*dy + -8.44134 *x*lens_ipow(dx, 2)*dy*lambda + -583.728 *lens_ipow(dx, 3)*dy*lambda+0.0f;
const float dx04 =  + 0.0979591 *x + 8.40417 *dx + -0.135654 *x*lambda + -11.5523 *dx*lambda + 0.000597495 *x*lens_ipow(y, 2) + 0.0513483 *lens_ipow(y, 2)*dx + -0.00163565 *x*lens_ipow(y, 2)*lambda + -0.140757 *lens_ipow(y, 2)*dx*lambda + -4.22067 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -291.864 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.00177815 *x*lens_ipow(y, 2)*lens_ipow(lambda, 3) + 0.15258 *lens_ipow(y, 2)*dx*lens_ipow(lambda, 3)+0.0f;
const float dx10 =  + 1.75108 *dx*dy + 0.0257636 *y*dx + 0.100727 *x*dy*lambda + 0.00116576 *x*y*lambda + -0.00158633 *x*y*lens_ipow(lambda, 2) + -0.138497 *x*dy*lens_ipow(lambda, 2) + 0.0746724 *x*dy*lens_ipow(lambda, 4) + 0.000844376 *x*y*lens_ipow(lambda, 4)+0.0f;
const float dx11 =  + 0.720977  + 0.0941827 *lambda + 1.19424 *lens_ipow(dx, 2) + 0.0639406 *y*dy + 2.60607 *lens_ipow(dy, 2) + 0.0257636 *x*dx + -0.064435 *lens_ipow(lambda, 2) + 0.000319081 *lens_ipow(y, 2) + 0.000582882 *lens_ipow(x, 2)*lambda + -0.000793167 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 0.000126893 *lens_ipow(y, 3)*dy + 1.05123 *y*lens_ipow(dy, 3) + 21.4899 *lens_ipow(dy, 4) + 3.03224e-07 *lens_ipow(y, 4) + 0.0179752 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.48937 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + 0.000422188 *lens_ipow(x, 2)*lens_ipow(lambda, 4)+0.0f;
const float dx12 =  + 2.38848 *y*dx + 1.75108 *x*dy + 0.0257636 *x*y + 121.44 *dx*dy + -143.685 *dx*lens_ipow(dy, 3)*lambda + -2.97875 *y*dx*lens_ipow(dy, 2)*lambda+0.0f;
const float dx13 =  + 86.5823  + 8.22068 *lambda + 0.0319703 *lens_ipow(y, 2) + 5.21214 *y*dy + 1.75108 *x*dx + 60.72 *lens_ipow(dx, 2) + -5.61868 *lens_ipow(lambda, 2) + 156.004 *lens_ipow(dy, 2) + 0.0503633 *lens_ipow(x, 2)*lambda + 3.17233e-05 *lens_ipow(y, 4) + 1625.86 *lens_ipow(dy, 4) + 1.57685 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 85.9595 *y*lens_ipow(dy, 3) + -0.0692483 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 0.0119835 *lens_ipow(y, 3)*dy + -215.527 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -2.97875 *y*lens_ipow(dx, 2)*dy*lambda + 0.0373362 *lens_ipow(x, 2)*lens_ipow(lambda, 4)+0.0f;
const float dx14 =  + 8.22068 *dy + 0.0941827 *y + -0.12887 *y*lambda + -11.2374 *dy*lambda + 0.0503633 *lens_ipow(x, 2)*dy + 0.000582882 *lens_ipow(x, 2)*y + -0.00158633 *lens_ipow(x, 2)*y*lambda + -0.138497 *lens_ipow(x, 2)*dy*lambda + -71.8423 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + -1.48937 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.149345 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 3) + 0.00168875 *lens_ipow(x, 2)*y*lens_ipow(lambda, 3)+0.0f;
const float dx20 =  + 0.00423523  + -0.00636248 *lambda + 0.00145282 *y*dy + 0.00446774 *x*dx + 7.68026e-06 *lens_ipow(y, 2) + 2.38216e-05 *lens_ipow(x, 2) + 0.0732182 *lens_ipow(dy, 2) + 0.211126 *lens_ipow(dx, 2) + -0.00675267 *lens_ipow(dy, 2)*lambda + 0.0134151 *lens_ipow(lambda, 3) + -0.0239387 *lens_ipow(dx, 4) + 7.49172e-07 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -0.0348161 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.0103739 *lens_ipow(lambda, 4) + -0.0004992 *x*dx*lens_ipow(lambda, 3)+0.0f;
const float dx21 =  + 0.133439 *dx*dy + 0.00145282 *x*dy + 1.53605e-05 *x*y + 0.00146398 *y*dx + -0.011796 *dx*dy*lens_ipow(lambda, 2) + 1.49834e-06 *x*y*lens_ipow(lambda, 2)+0.0f;
const float dx22 =  + 2.05505  + -2.05391 *lambda + 0.133439 *y*dy + 0.00223387 *lens_ipow(x, 2) + 24.3243 *lens_ipow(dx, 2) + 7.82256 *lens_ipow(dy, 2) + 0.422251 *x*dx + 0.00073199 *lens_ipow(y, 2) + 2.92184 *lens_ipow(lambda, 2) + -1.44902 *lens_ipow(lambda, 3) + -5.95152 *lens_ipow(dx, 2)*lambda + -1.49821 *lens_ipow(dy, 2)*lambda + -0.0957547 *x*lens_ipow(dx, 3) + -0.011796 *y*dy*lens_ipow(lambda, 2) + -0.0696322 *x*dx*lens_ipow(lambda, 2) + 8.49059 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0002496 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + 12.6952 *lens_ipow(dy, 6)+0.0f;
const float dx23 =  + 0.133439 *y*dx + 0.00145282 *x*y + 15.6451 *dx*dy + 0.146436 *x*dy + -0.0135053 *x*dy*lambda + -2.99642 *dx*dy*lambda + -0.011796 *y*dx*lens_ipow(lambda, 2) + 5.66039 *lens_ipow(dx, 3)*dy + 76.1712 *dx*lens_ipow(dy, 5)+0.0f;
const float dx24 =  + -0.00636248 *x + -2.05391 *dx + 5.84369 *dx*lambda + -4.34707 *dx*lens_ipow(lambda, 2) + -1.98384 *lens_ipow(dx, 3) + -0.00675267 *x*lens_ipow(dy, 2) + 0.0402454 *x*lens_ipow(lambda, 2) + -1.49821 *dx*lens_ipow(dy, 2) + -0.0235919 *y*dx*dy*lambda + 1.49834e-06 *x*lens_ipow(y, 2)*lambda + -0.0696322 *x*lens_ipow(dx, 2)*lambda + -0.0414957 *x*lens_ipow(lambda, 3) + -0.0007488 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2)+0.0f;
const float dx30 =  + 0.138058 *dx*dy + 0.00149723 *y*dx + 1.58132e-05 *x*y + 0.00150168 *x*dy + -0.0267553 *dx*dy*lens_ipow(lambda, 2) + -0.000142302 *y*dx*lens_ipow(lambda, 2) + -0.000210475 *x*dy*lens_ipow(lambda, 3)+0.0f;
const float dx31 =  + 0.00354816  + -0.00456985 *lambda + 0.0775613 *lens_ipow(dx, 2) + 0.00495573 *y*dy + 0.234202 *lens_ipow(dy, 2) + 0.00149723 *x*dx + 0.00325748 *lens_ipow(lambda, 2) + 7.90658e-06 *lens_ipow(x, 2) + 2.63639e-05 *lens_ipow(y, 2) + -0.0640071 *lens_ipow(dy, 2)*lambda + -0.0144772 *lens_ipow(dx, 2)*lambda + -0.00106957 *y*dy*lambda + -4.65848e-06 *lens_ipow(y, 2)*lambda + -0.000142302 *x*dx*lens_ipow(lambda, 2) + -12.2781 *lens_ipow(dx, 4)*lens_ipow(dy, 4)+0.0f;
const float dx32 =  + 0.155123 *y*dx + 0.138058 *x*dy + 0.00149723 *x*y + 16.6966 *dx*dy + -0.0289543 *y*dx*lambda + -4.60134 *dx*dy*lambda + -0.0267553 *x*dy*lens_ipow(lambda, 2) + -0.000142302 *x*y*lens_ipow(lambda, 2) + -49.1123 *y*lens_ipow(dx, 3)*lens_ipow(dy, 4)+0.0f;
const float dx33 =  + 1.95925  + -1.54235 *lambda + 0.00247787 *lens_ipow(y, 2) + 0.468405 *y*dy + 0.138058 *x*dx + 8.34829 *lens_ipow(dx, 2) + 1.98075 *lens_ipow(lambda, 2) + 0.000750838 *lens_ipow(x, 2) + 25.7056 *lens_ipow(dy, 2) + -0.128014 *y*dy*lambda + -2.30067 *lens_ipow(dx, 2)*lambda + -8.42805 *lens_ipow(dy, 2)*lambda + -0.000534787 *lens_ipow(y, 2)*lambda + -0.859733 *lens_ipow(lambda, 3) + -0.0267553 *x*dx*lens_ipow(lambda, 2) + -0.000105238 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + 69.6546 *lens_ipow(dy, 6) + -49.1123 *y*lens_ipow(dx, 4)*lens_ipow(dy, 3)+0.0f;
const float dx34 =  + -1.54235 *dy + -0.00456985 *y + 0.00651497 *y*lambda + 3.96151 *dy*lambda + -0.0640071 *y*lens_ipow(dy, 2) + -0.0144772 *y*lens_ipow(dx, 2) + -2.30067 *lens_ipow(dx, 2)*dy + -2.80935 *lens_ipow(dy, 3) + -0.000534787 *lens_ipow(y, 2)*dy + -2.5792 *dy*lens_ipow(lambda, 2) + -1.55283e-06 *lens_ipow(y, 3) + -0.0535106 *x*dx*dy*lambda + -0.000284603 *x*y*dx*lambda + -0.000315713 *lens_ipow(x, 2)*dy*lens_ipow(lambda, 2)+0.0f;
const float dx40 =  + -0.151437 *lens_ipow(dx, 3) + -4.2384e-05 *x*y*dy + -2.10462e-05 *lens_ipow(y, 2)*dx + -2.62677e-07 *x*lens_ipow(y, 2) + -0.00441576 *x*lens_ipow(dx, 2) + -4.96233e-05 *lens_ipow(x, 2)*dx + -0.189039 *dx*lens_ipow(dy, 2) + -2.04983e-07 *lens_ipow(x, 3) + -0.00374573 *y*dx*dy + -0.00188372 *x*lens_ipow(dy, 2)+0.0f;
const float dx41 =  + -0.015176 *lens_ipow(dy, 3) + -0.00193053 *y*lens_ipow(dx, 2) + -2.1192e-05 *lens_ipow(x, 2)*dy + -4.20925e-05 *x*y*dx + -2.62677e-07 *lens_ipow(x, 2)*y + -0.194106 *lens_ipow(dx, 2)*dy + -0.00374573 *x*dx*dy + -9.72246e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.00885584 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -5.57143e-07 *lens_ipow(y, 4)*dy + -1.41245e-09 *lens_ipow(y, 5) + -0.417576 *y*lens_ipow(dy, 4) + -8.13335 *lens_ipow(dy, 5)+0.0f;
const float dx42 =  + -17.6993 *lens_ipow(dx, 3) + -0.00193053 *lens_ipow(y, 2)*dx + -0.454311 *x*lens_ipow(dx, 2) + -22.7598 *dx*lens_ipow(dy, 2) + -2.10462e-05 *x*lens_ipow(y, 2) + -0.00441576 *lens_ipow(x, 2)*dx + -0.388213 *y*dx*dy + -1.65411e-05 *lens_ipow(x, 3) + -0.189039 *x*lens_ipow(dy, 2) + -0.00374573 *x*y*dy + -13.8472 *lens_ipow(dx, 5)+0.0f;
const float dx43 =  + -0.045528 *y*lens_ipow(dy, 2) + -22.7598 *lens_ipow(dx, 2)*dy + -2.1192e-05 *lens_ipow(x, 2)*y + -4.96929 *lens_ipow(dy, 3) + -0.194106 *y*lens_ipow(dx, 2) + -0.378079 *x*dx*dy + -0.00374573 *x*y*dx + -0.00188372 *lens_ipow(x, 2)*dy + -4.86123e-05 *lens_ipow(y, 4)*dy + -0.00885584 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -1.11429e-07 *lens_ipow(y, 5) + -824.152 *lens_ipow(dy, 5) + -0.835151 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -40.6667 *y*lens_ipow(dy, 4)+0.0f;
const float dx44 =  + 0.506251  + -1.39931 *lambda + 1.02062 *lens_ipow(lambda, 2)+0.0f;

const float dx00 =  + 0.549491  + -0.103186 *lambda + 0.0262441 *y*dy + 0.0663009 *lens_ipow(lambda, 2) + 0.000188283 *lens_ipow(y, 2) + 0.0006518 *lens_ipow(x, 2) + 0.540053 *lens_ipow(dy, 2) + 18.5134 *lens_ipow(dx, 2)*lambda + 0.62762 *x*dx*lambda + -40.0336 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.000448832 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.24126 *x*dx*lens_ipow(lambda, 2) + 0.000547869 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 26.4292 *lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 0.000279274 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 0.78322 *x*dx*lens_ipow(lambda, 3) + -3.68345e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)+0.0f;
const float dx01 =  + 1.44752 *dx*dy + 0.0262441 *x*dy + 0.000376566 *x*y + 0.0314611 *y*dx + 0.000558548 *x*y*lens_ipow(dx, 2)*lambda + -1.47338e-10 *lens_ipow(x, 5)*y+0.0f;
const float dx02 =  + 147.842  + -45.4974 *lambda + 1.44752 *y*dy + -14.243 *lens_ipow(dy, 2) + 0.0157306 *lens_ipow(y, 2) + 66.7136 *lens_ipow(lambda, 2) + 37.0267 *x*dx*lambda + -34.6687 *lens_ipow(lambda, 3) + 0.31381 *lens_ipow(x, 2)*lambda + -334.422 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -80.0672 *x*dx*lens_ipow(lambda, 2) + -0.620631 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 0.000365246 *lens_ipow(x, 3)*dx + 336.078 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 52.8584 *x*dx*lens_ipow(lambda, 3) + 0.000558548 *x*lens_ipow(y, 2)*dx*lambda + 0.39161 *lens_ipow(x, 2)*lens_ipow(lambda, 3) + 4119.56 *lens_ipow(dx, 6) + 455.482 *lens_ipow(dx, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx03 =  + 1.44752 *y*dx + 0.0262441 *x*y + -28.4859 *dx*dy + 1.08011 *x*dy + 0.000299221 *lens_ipow(x, 3)*dy + 224.052 *lens_ipow(dx, 3)*dy+0.0f;
const float dx04 =  + -0.103186 *x + -45.4974 *dx + 0.132602 *x*lambda + 133.427 *dx*lambda + 18.5134 *x*lens_ipow(dx, 2) + -104.006 *dx*lens_ipow(lambda, 2) + 0.31381 *lens_ipow(x, 2)*dx + -222.948 *lens_ipow(dx, 3)*lambda + -80.0672 *x*lens_ipow(dx, 2)*lambda + -1.24126 *lens_ipow(x, 2)*dx*lambda + 79.2877 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.000279274 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.17483 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + 759.136 *lens_ipow(dx, 3)*lens_ipow(lambda, 4)+0.0f;
const float dx10 =  + 1.23895 *dx*dy + 0.0289015 *y*dx + 0.000334651 *x*y + 0.0219174 *x*dy + -0.0144726 *y*dx*lens_ipow(dy, 2) + 0.000195617 *x*y*lens_ipow(dx, 2) + -1.2764e-10 *lens_ipow(x, 3)*lens_ipow(y, 3)+0.0f;
const float dx11 =  + 0.28577  + 1.07359 *lens_ipow(dx, 2) + 0.0315917 *y*dy + 0.0289015 *x*dx + 0.000167325 *lens_ipow(x, 2) + 0.000270904 *lens_ipow(y, 2) + 0.000381361 *lens_ipow(y, 3)*dy + -0.0144726 *x*dx*lens_ipow(dy, 2) + 3.85781 *y*lens_ipow(dy, 3) + 9.78084e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 102.796 *lens_ipow(dy, 4) + 8.89698e-07 *lens_ipow(y, 4) + 0.056834 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -9.573e-11 *lens_ipow(x, 4)*lens_ipow(y, 2) + -1704.18 *lens_ipow(dy, 6)*lens_ipow(lambda, 2) + -56.4805 *y*lens_ipow(dy, 5)*lens_ipow(lambda, 2) + -0.522785 *lens_ipow(y, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -1.82942e-07 *lens_ipow(y, 5)*dy*lens_ipow(lambda, 2)+0.0f;
const float dx12 =  + 2.14718 *y*dx + 1.23895 *x*dy + 0.0289015 *x*y + 218.114 *dx*lens_ipow(dy, 3) + -0.0144726 *x*y*lens_ipow(dy, 2) + 0.000195617 *lens_ipow(x, 2)*y*dx + 2711.87 *lens_ipow(dx, 5)*dy+0.0f;
const float dx13 =  + 101.636  + 2.52522 *lambda + 0.0157958 *lens_ipow(y, 2) + 1.23895 *x*dx + -1.64973 *lens_ipow(lambda, 2) + 0.0109587 *lens_ipow(x, 2) + -190.81 *lens_ipow(dy, 2) + 327.171 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 9.53403e-05 *lens_ipow(y, 4) + 11466.3 *lens_ipow(dy, 4) + -0.0289453 *x*y*dx*dy + 5.78671 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 411.184 *y*lens_ipow(dy, 3) + 0.0378893 *lens_ipow(y, 3)*dy + 451.978 *lens_ipow(dx, 6) + -10225.1 *y*lens_ipow(dy, 5)*lens_ipow(lambda, 2) + -141.201 *lens_ipow(y, 2)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -259496 *lens_ipow(dy, 6)*lens_ipow(lambda, 2) + -0.697047 *lens_ipow(y, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -3.04904e-08 *lens_ipow(y, 6)*lens_ipow(lambda, 2)+0.0f;
const float dx14 =  + 2.52522 *dy + -3.29947 *dy*lambda + -3408.36 *y*lens_ipow(dy, 6)*lambda + -56.4805 *lens_ipow(y, 2)*lens_ipow(dy, 5)*lambda + -74141.8 *lens_ipow(dy, 7)*lambda + -0.348523 *lens_ipow(y, 3)*lens_ipow(dy, 4)*lambda + -6.09808e-08 *lens_ipow(y, 6)*dy*lambda+0.0f;
const float dx20 =  + -0.0115335  + 3.72489e-05 *lambda + -0.0001031 *y*dy + -0.000415915 *x*dx + -3.89927e-07 *lens_ipow(y, 2) + -1.96658e-06 *lens_ipow(x, 2) + -0.00491666 *lens_ipow(dx, 2) + -0.00182509 *lens_ipow(dx, 2)*lambda + 0.131347 *lens_ipow(dx, 4) + 0.00348922 *x*lens_ipow(dx, 3) + 0.000134358 *x*dx*lens_ipow(dy, 2) + 2.38815e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 9.81199e-05 *y*lens_ipow(dy, 3)*lambda+0.0f;
const float dx21 =  + -0.00243346 *dx*dy + -0.0001031 *x*dy + -7.79854e-07 *x*y + -8.66058e-05 *y*dx + 0.0169351 *lens_ipow(dx, 3)*dy + 0.0002771 *y*lens_ipow(dx, 3) + 9.81199e-05 *x*lens_ipow(dy, 3)*lambda+0.0f;
const float dx22 =  + -1.22583  + 0.388564 *lambda + -0.00243346 *y*dy + -0.000207958 *lens_ipow(x, 2) + 0.546634 *lens_ipow(dy, 2) + -0.00983333 *x*dx + -4.33029e-05 *lens_ipow(y, 2) + -0.540983 *lens_ipow(lambda, 2) + -0.00365019 *x*dx*lambda + 0.265823 *lens_ipow(lambda, 3) + 11.8489 *lens_ipow(dx, 2)*lambda + 0.525388 *x*lens_ipow(dx, 3) + 0.00523384 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -22.8991 *lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.0508053 *y*lens_ipow(dx, 2)*dy + 16.0718 *lens_ipow(dx, 4) + 0.000415651 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 6.7179e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 1.5921e-05 *lens_ipow(x, 3)*dx + -0.614038 *lens_ipow(dy, 4)*lambda + 38.9758 *lens_ipow(dx, 2)*lens_ipow(lambda, 4) + -28.2837 *lens_ipow(dx, 2)*lens_ipow(lambda, 5)+0.0f;
const float dx23 =  + -0.00243346 *y*dx + -0.0001031 *x*y + 1.09327 *dx*dy + 0.0169351 *y*lens_ipow(dx, 3) + 0.000134358 *lens_ipow(x, 2)*dx*dy + 0.00029436 *x*y*lens_ipow(dy, 2)*lambda + -2.45615 *dx*lens_ipow(dy, 3)*lambda+0.0f;
const float dx24 =  + 3.72489e-05 *x + 0.388564 *dx + -1.08197 *dx*lambda + -0.00182509 *x*lens_ipow(dx, 2) + 0.797468 *dx*lens_ipow(lambda, 2) + 3.94963 *lens_ipow(dx, 3) + -15.2661 *lens_ipow(dx, 3)*lambda + 9.81199e-05 *x*y*lens_ipow(dy, 3) + -0.614038 *dx*lens_ipow(dy, 4) + 51.9677 *lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -47.1395 *lens_ipow(dx, 3)*lens_ipow(lambda, 4)+0.0f;
const float dx30 =  + 0.0111068 *dx*dy + -6.98903e-05 *y*dx + -2.2623e-07 *x*y + 3.20481e-05 *x*dy + 0.0139775 *x*lens_ipow(dy, 5) + 9.70047e-05 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy + 1.6298e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lambda + 0.000394283 *x*y*lens_ipow(dy, 4)*lambda + 2.08918e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy*lambda + -0.0577875 *y*dx*lens_ipow(dy, 4)*lambda + -0.00203494 *lens_ipow(y, 2)*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -1.1459e-07 *lens_ipow(x, 3)*y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -2.03286e-05 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.00812089 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2)+0.0f;
const float dx31 =  + -0.012339  + 7.66706e-05 *lambda + -0.001447 *lens_ipow(dx, 2) + -6.2596e-05 *y*dy + 0.00386463 *lens_ipow(dy, 2) + -6.98903e-05 *x*dx + -1.13115e-07 *lens_ipow(x, 2) + 1.60233e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 2) + -2.6494e-06 *lens_ipow(y, 2)*lens_ipow(lambda, 4) + 0.000194009 *x*y*lens_ipow(dx, 3)*dy + 1.6298e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy*lambda + 0.000197141 *lens_ipow(x, 2)*lens_ipow(dy, 4)*lambda + 0.72148 *lens_ipow(dx, 4)*lens_ipow(dy, 2)*lambda + 1.39279e-07 *lens_ipow(x, 3)*y*dx*dy*lambda + -0.0577875 *x*dx*lens_ipow(dy, 4)*lambda + -12.0402 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -0.00406988 *x*y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -2.86475e-08 *lens_ipow(x, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 219.637 *lens_ipow(dx, 2)*lens_ipow(dy, 8) + -6.09857e-05 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.0162418 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 2)+0.0f;
const float dx32 =  + -0.002894 *y*dx + 0.0111068 *x*dy + -6.98903e-05 *x*y + 2.10196 *dx*dy + 0.000291014 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 1.6298e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy*lambda + 2.88592 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + 6.96393e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dy*lambda + -0.0577875 *x*y*lens_ipow(dy, 4)*lambda + -48.1607 *y*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -0.00203494 *x*lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 26780.8 *dx*lens_ipow(dy, 9) + 439.273 *y*dx*lens_ipow(dy, 8) + -2.03286e-05 *x*lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.0243627 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2)+0.0f;
const float dx33 =  + -0.907962  + -3.1298e-05 *lens_ipow(y, 2) + 0.00772926 *y*dy + 0.0111068 *x*dx + 1.05098 *lens_ipow(dx, 2) + 1.60241e-05 *lens_ipow(x, 2) + 1.77638 *lens_ipow(dy, 2) + 0.0349439 *lens_ipow(x, 2)*lens_ipow(dy, 4) + 9.70047e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + 8.14901e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + 0.000788565 *lens_ipow(x, 2)*y*lens_ipow(dy, 3)*lambda + 1.44296 *y*lens_ipow(dx, 4)*dy*lambda + 6.96393e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*lambda + -0.23115 *x*y*dx*lens_ipow(dy, 3)*lambda + -48.1607 *y*lens_ipow(dx, 4)*lens_ipow(dy, 3) + -0.00610483 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -5.72951e-08 *lens_ipow(x, 4)*y*dy*lens_ipow(lambda, 2) + 120514 *lens_ipow(dx, 2)*lens_ipow(dy, 8) + 1757.09 *y*lens_ipow(dx, 2)*lens_ipow(dy, 7) + -4.06571e-05 *x*lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 4) + 0.0243627 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;
const float dx34 =  + 7.66706e-05 *y + 1.06822e-06 *lens_ipow(y, 3)*lambda + -3.53254e-06 *lens_ipow(y, 3)*lens_ipow(lambda, 3) + 8.14901e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.000197141 *lens_ipow(x, 2)*y*lens_ipow(dy, 4) + 0.72148 *y*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 6.96393e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy + -0.0577875 *x*y*dx*lens_ipow(dy, 4) + -0.00406988 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3)*lambda + -5.72951e-08 *lens_ipow(x, 4)*y*lens_ipow(dy, 2)*lambda + -8.13142e-05 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + 0.0162418 *x*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lambda+0.0f;
const float dx40 =  + -0.00180612 *dx + -2.03133e-05 *x + -0.000187911 *x*lens_ipow(dx, 2) + -0.0187029 *dx*lens_ipow(dy, 2) + -0.00014993 *y*dx*dy + -2.75815e-10 *lens_ipow(x, 5) + -5.22872e-08 *lens_ipow(x, 4)*dx + -1.50845 *lens_ipow(dx, 5) + -0.028217 *x*lens_ipow(dx, 4)+0.0f;
const float dx41 =  + -0.00137751 *dy + -1.64614e-05 *y + -0.0187356 *lens_ipow(dx, 2)*dy + -0.00014993 *x*dx*dy + -3.41905e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.00313514 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -2.1155e-07 *lens_ipow(y, 4)*dy + -5.78683e-10 *lens_ipow(y, 5) + -0.158513 *y*lens_ipow(dy, 4) + -3.47393 *lens_ipow(dy, 5)+0.0f;
const float dx42 =  + -0.00180612 *x + -0.163117 *dx + -4.92938 *dx*lens_ipow(dy, 2) + -0.000187911 *lens_ipow(x, 2)*dx + -0.0374711 *y*dx*dy + -0.0187029 *x*lens_ipow(dy, 2) + -0.00014993 *x*y*dy + -276.473 *lens_ipow(dx, 5) + -1.04574e-08 *lens_ipow(x, 5) + -7.54224 *x*lens_ipow(dx, 4) + -0.056434 *lens_ipow(x, 2)*lens_ipow(dx, 3)+0.0f;
const float dx43 =  + -0.00137751 *y + -0.137324 *dy + -4.92938 *lens_ipow(dx, 2)*dy + -0.0187356 *y*lens_ipow(dx, 2) + -0.0374059 *x*dx*dy + -0.00014993 *x*y*dx + -1.70953e-05 *lens_ipow(y, 4)*dy + -0.00313514 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -4.231e-08 *lens_ipow(y, 5) + -419.008 *lens_ipow(dy, 5) + -0.317026 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -17.3697 *y*lens_ipow(dy, 4)+0.0f;
const float dx44 =  + 3.29506  + -19.0793 *lambda + 43.8853 *lens_ipow(lambda, 2) + -46.3466 *lens_ipow(lambda, 3) + 18.7133 *lens_ipow(lambda, 4)+0.0f;

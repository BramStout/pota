float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + 1 *begin_x + 105 *begin_dx + 1.39872e-05 *begin_dx*begin_dy*begin_lambda + -0.000107611 *lens_ipow(begin_dx, 3)*begin_dy + -4.71532e-05 *begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -1.96683e-05 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + -0.000327671 *lens_ipow(begin_dx, 5) + 4.96919e-06 *begin_y*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 4.83911e-08 *begin_x*begin_y*begin_dx*begin_dy*begin_lambda + 1.29119e-10 *begin_x*lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -5.54182e-10 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -1.02833e-05 *begin_y*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -7.79854e-05 *lens_ipow(begin_dx, 6) + 0.000706735 *lens_ipow(begin_dx, 5)*begin_lambda + 9.23689e-10 *lens_ipow(begin_x, 3)*begin_dx*begin_dy*begin_lambda + -1.85773e-09 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_dy, 2) + 5.53975e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_dy + -6.86699e-11 *begin_x*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 2.4149e-06 *begin_x*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -9.64278e-06 *begin_x*lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2);
  pred_y =  + 1 *begin_y + 105 *begin_dy + 1.15237e-08 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + 3.1238e-05 *lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + -5.0963e-09 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 2) + -2.98221e-11 *lens_ipow(begin_x, 4)*begin_dy + 5.41749e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 3) + -4.76726e-07 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -5.48269e-05 *lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + 8.52346e-13 *lens_ipow(begin_x, 4)*begin_y*begin_dy + -2.7651e-08 *lens_ipow(begin_x, 2)*begin_dy*lens_ipow(begin_lambda, 3) + 2.37073e-05 *lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 3) + -0.00440305 *begin_dx*lens_ipow(begin_dy, 5) + 7.67541e-07 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 3) + -6.11788e-10 *lens_ipow(begin_x, 2)*begin_y*begin_dy*lens_ipow(begin_lambda, 2) + -5.42857e-11 *lens_ipow(begin_y, 3)*lens_ipow(begin_lambda, 3) + 9.81771e-09 *lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + -3.4467e-06 *begin_x*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + 9.00461e-11 *lens_ipow(begin_x, 4)*begin_dy*begin_lambda + -8.56575e-05 *begin_y*begin_dx*lens_ipow(begin_dy, 4);
  pred_dx =  + 1 *begin_dx + 2.54277e-07 *lens_ipow(begin_dx, 3) + -5.95729e-11 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + 2.12297e-08 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + -1.27193e-06 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + -5.86347e-12 *lens_ipow(begin_y, 3)*begin_dx*begin_lambda + -7.78134e-12 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -9.69091e-08 *begin_x*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + 1.40817e-07 *begin_x*lens_ipow(begin_dx, 4) + -8.91675e-11 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_lambda + -9.49798e-13 *lens_ipow(begin_x, 4)*begin_dx*begin_dy + -1.00611e-09 *begin_x*begin_y*lens_ipow(begin_dx, 3)*begin_lambda + 9.98251e-06 *lens_ipow(begin_dx, 5)*begin_lambda + -4.23534e-06 *lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 2) + 2.22847e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*begin_lambda + -2.06514e-11 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 3) + 1.83352e-09 *lens_ipow(begin_lambda, 6) + -2.33501e-13 *lens_ipow(begin_y, 4)*begin_dx*begin_lambda + 9.21017e-15 *lens_ipow(begin_y, 5)*begin_dx + 2.04351e-10 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 3);
  pred_dy =  + 1 *begin_dy + -7.46083e-12 *lens_ipow(begin_x, 2)*begin_dx + 6.33199e-08 *lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 4.48188e-09 *begin_x*begin_dx*begin_dy*begin_lambda + 4.70791e-08 *begin_x*lens_ipow(begin_dy, 3) + 7.50076e-09 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + 7.33864e-07 *begin_dx*lens_ipow(begin_dy, 3) + -2.06579e-08 *begin_y*lens_ipow(begin_dy, 3)*begin_lambda + 1.69181e-09 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 2.09064e-09 *begin_x*begin_y*lens_ipow(begin_dy, 2)*begin_lambda + 3.76587e-07 *begin_y*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + -3.02551e-06 *lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + -4.01118e-09 *begin_x*begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 3.31164e-09 *begin_x*begin_y*lens_ipow(begin_dy, 4) + 8.95071e-15 *lens_ipow(begin_x, 4)*begin_y*begin_dy + -1.31655e-05 *begin_dx*lens_ipow(begin_dy, 5) + 1.28709e-05 *begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + 1.35604e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -6.2004e-11 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 3) + -1.35765e-07 *begin_x*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 105  + 1.39872e-05 *begin_dy*begin_lambda + -0.000322832 *lens_ipow(begin_dx, 2)*begin_dy + -4.71532e-05 *begin_dy*lens_ipow(begin_lambda, 3) + -5.90048e-05 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -0.00163836 *lens_ipow(begin_dx, 4) + 4.96919e-06 *begin_y*lens_ipow(begin_dy, 2)*begin_lambda + 4.83911e-08 *begin_x*begin_y*begin_dy*begin_lambda + -5.54182e-10 *begin_x*lens_ipow(begin_y, 2)*begin_dy + -1.02833e-05 *begin_y*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -0.000467913 *lens_ipow(begin_dx, 5) + 0.00353368 *lens_ipow(begin_dx, 4)*begin_lambda + 9.23689e-10 *lens_ipow(begin_x, 3)*begin_dy*begin_lambda + -1.85773e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + 1.10795e-08 *lens_ipow(begin_x, 3)*begin_dx*begin_dy + -6.86699e-11 *begin_x*lens_ipow(begin_y, 3)*begin_dy + 2.4149e-06 *begin_x*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -1.92856e-05 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0[0][1] =  + 1.39872e-05 *begin_dx*begin_lambda + -0.000107611 *lens_ipow(begin_dx, 3) + -4.71532e-05 *begin_dx*lens_ipow(begin_lambda, 3) + 9.93837e-06 *begin_y*begin_dx*begin_dy*begin_lambda + 4.83911e-08 *begin_x*begin_y*begin_dx*begin_lambda + 1.29119e-10 *begin_x*lens_ipow(begin_y, 2)*begin_lambda + -5.54182e-10 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -2.05667e-05 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 9.23689e-10 *lens_ipow(begin_x, 3)*begin_dx*begin_lambda + -3.71545e-09 *lens_ipow(begin_x, 3)*begin_dx*begin_dy + 5.53975e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + -6.86699e-11 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 4.82981e-06 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -9.64278e-06 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0[1][0] =  + 1.15237e-08 *lens_ipow(begin_y, 2)*begin_dy + -5.0963e-09 *begin_x*begin_y*lens_ipow(begin_lambda, 2) + -9.53452e-07 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 4.74145e-05 *begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -0.00440305 *lens_ipow(begin_dy, 5) + 7.67541e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + 9.81771e-09 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -8.56575e-05 *begin_y*lens_ipow(begin_dy, 4)+0.0f;
  dx1_domega0[1][1] =  + 105  + 1.15237e-08 *lens_ipow(begin_y, 2)*begin_dx + 6.2476e-05 *begin_dy*lens_ipow(begin_lambda, 3) + -2.98221e-11 *lens_ipow(begin_x, 4) + 1.62525e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -9.53452e-07 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + -0.000109654 *begin_dy*lens_ipow(begin_lambda, 4) + 8.52346e-13 *lens_ipow(begin_x, 4)*begin_y + -2.7651e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 3) + 2.37073e-05 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + -0.0220152 *begin_dx*lens_ipow(begin_dy, 4) + 2.30262e-06 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -6.11788e-10 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_lambda, 2) + 1.96354e-08 *lens_ipow(begin_y, 3)*begin_dx*begin_dy + -1.03401e-05 *begin_x*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 9.00461e-11 *lens_ipow(begin_x, 4)*begin_lambda + -0.00034263 *begin_y*begin_dx*lens_ipow(begin_dy, 3)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;

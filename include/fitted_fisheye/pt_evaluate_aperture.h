const float out_x =  + 24.0758 *dx + 0.714404 *x + 1.13639 *y*dx*dy + 0.032411 *x*y*dy + 0.0496792 *lens_ipow(x, 2)*dx + 9.19327 *lens_ipow(dx, 3) + 10.149 *dx*lens_ipow(dy, 2) + 0.464028 *x*lens_ipow(dy, 2) + 1.51791 *x*lens_ipow(dx, 2) + 0.0192878 *lens_ipow(y, 2)*dx + -1.14405e-06 *lens_ipow(x, 5) + -0.000677498 *lens_ipow(x, 4)*lens_ipow(dx, 3) + -5.64672e-08 *lens_ipow(x, 3)*lens_ipow(y, 4) + -2.12508e-07 *lens_ipow(x, 5)*y*dy + -6.02066e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -0.0098213 *lens_ipow(x, 3)*lens_ipow(dx, 4) + -1.90383e-08 *lens_ipow(y, 7)*dx*dy + -6.69381e-10 *lens_ipow(y, 8)*dx + -7.78368e-08 *lens_ipow(x, 7)*lens_ipow(dx, 2) + -7.13255e-11 *x*lens_ipow(y, 8) + -2.5276e-10 *lens_ipow(x, 7)*lens_ipow(y, 2) + 1.63176e-07 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dy, 2) + -4.59009e-09 *lens_ipow(x, 4)*lens_ipow(y, 4)*dx*lambda + 2.41334e-08 *lens_ipow(x, 7)*lens_ipow(dy, 2)*lambda + -2.13711e-13 *lens_ipow(x, 11) + -2.81141e-11 *lens_ipow(x, 8)*lens_ipow(y, 2)*dx + -1.07931e-11 *lens_ipow(x, 10)*dx + -7.39003e-12 *x*lens_ipow(y, 9)*dy;
const float out_y =  + 0.720082 *y + 24.0428 *dy + -0.014603 *y*lambda + 0.488201 *y*lens_ipow(dx, 2) + 0.0532851 *lens_ipow(y, 2)*dy + 1.6659 *y*lens_ipow(dy, 2) + 1.1315 *x*dx*dy + 0.033149 *x*y*dx + 10.3268 *lens_ipow(dx, 2)*dy + 0.0189151 *lens_ipow(x, 2)*dy + 10.648 *lens_ipow(dy, 3) + 6.86709e-07 *lens_ipow(y, 5)*lambda + -1.18904e-08 *lens_ipow(y, 7) + -1.59389e-07 *x*lens_ipow(y, 5)*dx + -6.6993e-08 *lens_ipow(x, 4)*lens_ipow(y, 3) + -7.33692e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy + 2.01469e-08 *lens_ipow(x, 4)*lens_ipow(y, 3)*lambda + -5.45356e-11 *lens_ipow(x, 8)*y + -1.45339e-09 *lens_ipow(y, 8)*dy + 1.39319e-07 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dx, 2) + -2.51749e-10 *lens_ipow(x, 2)*lens_ipow(y, 7) + 1.70727e-10 *lens_ipow(x, 8)*y*lens_ipow(dx, 2) + -2.91946e-11 *lens_ipow(x, 2)*lens_ipow(y, 8)*dy + -7.61611e-14 *lens_ipow(y, 11) + 5.90072e-11 *lens_ipow(y, 9)*lens_ipow(dx, 2) + -1.60411e-12 *lens_ipow(x, 10)*dy + 8.55147e-10 *lens_ipow(x, 3)*lens_ipow(y, 6)*dx*dy + -0.000201456 *lens_ipow(x, 5)*lens_ipow(dx, 3)*lens_ipow(dy, 3);
const float out_dx =  + 1.07844 *dx + -0.00976452 *x + -0.00679202 *x*lambda + -0.243874 *dx*lambda + 0.00443152 *x*y*dy + 0.00637913 *lens_ipow(x, 2)*dx + 6.34639e-05 *x*lens_ipow(y, 2) + 6.36474e-05 *lens_ipow(x, 3) + 0.0312271 *x*lens_ipow(dy, 2) + 0.0963793 *x*lens_ipow(dx, 2) + 0.00192144 *lens_ipow(y, 2)*dx + 0.433169 *lens_ipow(dx, 3)*lambda + 0.197062 *y*dx*dy*lambda + -0.0065923 *x*y*lens_ipow(dx, 2)*dy + -0.168223 *y*dx*dy*lens_ipow(lambda, 2) + -0.000346556 *lens_ipow(x, 2)*y*dx*dy + 0.000109518 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lambda + 6.31452e-08 *lens_ipow(x, 6)*dx + -2.03789e-09 *lens_ipow(x, 3)*lens_ipow(y, 4) + 6.2172e-07 *lens_ipow(x, 5)*lens_ipow(dy, 2) + -3.67141 *lens_ipow(dx, 7)*lambda + -0.000108841 *lens_ipow(x, 3)*y*lens_ipow(dy, 5) + -4.27484e-12 *x*lens_ipow(y, 8) + -1.9923e-11 *lens_ipow(x, 7)*lens_ipow(y, 2) + -2.43505e-10 *lens_ipow(x, 8)*dx + -4.27357e-10 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx*lambda + -1.66259e-14 *lens_ipow(x, 11) + -1.34222e-13 *lens_ipow(x, 5)*lens_ipow(y, 6);
const float out_dy =  + -0.00698832 *y + 1.25591 *dy + -0.955525 *dy*lambda + -0.0153323 *y*lambda + 0.0418371 *y*lens_ipow(dx, 2) + 0.00762595 *lens_ipow(y, 2)*dy + 0.128823 *y*lens_ipow(dy, 2) + 0.0743635 *x*dx*dy + 0.00493618 *x*y*dx + 0.346896 *lens_ipow(dx, 2)*dy + 6.95118e-05 *lens_ipow(x, 2)*y + 0.653258 *dy*lens_ipow(lambda, 2) + 7.30205e-05 *lens_ipow(y, 3) + 0.00218526 *lens_ipow(x, 2)*dy + 0.452226 *lens_ipow(dy, 3) + 0.00918914 *y*lens_ipow(lambda, 3) + -7.18563e-10 *lens_ipow(x, 6)*y + 1.53205e-08 *x*lens_ipow(y, 5)*dx + 2.85692e-09 *lens_ipow(y, 7)*lens_ipow(dx, 2) + -4.07508e-12 *lens_ipow(y, 9) + -3.29749e-11 *lens_ipow(x, 4)*lens_ipow(y, 5) + -1.84743e-08 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + -1.29876e-11 *lens_ipow(x, 2)*lens_ipow(y, 7) + -9.14928e-10 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy*lambda + -6.40826e-11 *lens_ipow(y, 8)*dy*lens_ipow(lambda, 2) + -7.04503e-14 *lens_ipow(x, 8)*lens_ipow(y, 3) + -3.13147e-09 *lens_ipow(x, 3)*lens_ipow(y, 5)*lens_ipow(dx, 3) + -205.259 *lens_ipow(dx, 2)*lens_ipow(dy, 9);
const float out_transmittance =  + 2.2675 *lambda + -4.63219 *lens_ipow(lambda, 2) + 4.4765 *lens_ipow(lambda, 3) + -1.68233 *lens_ipow(lambda, 4) + -0.000518612 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -7.87787e-05 *lens_ipow(x, 2)*y*dy + -5.90412e-05 *x*lens_ipow(y, 2)*dx + -4.405e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000589576 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.52188e-06 *lens_ipow(x, 4) + 0.000345135 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + 0.000234249 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -7.16553e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx + -7.03221e-07 *lens_ipow(x, 5)*dx + -3.29784e-06 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -7.82797e-07 *lens_ipow(y, 5)*dy + -2.07431e-08 *lens_ipow(y, 6) + -1.15701e-09 *x*lens_ipow(y, 6)*dx + -2.0271e-10 *lens_ipow(x, 4)*lens_ipow(y, 4) + -4.82953e-09 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy + -9.91082e-11 *lens_ipow(x, 6)*lens_ipow(y, 2) + -1.13723e-07 *lens_ipow(x, 6)*lens_ipow(dx, 2) + -4.23467e-08 *lens_ipow(y, 6)*lens_ipow(dy, 2) + 2.04981e-11 *lens_ipow(y, 8) + -4.03464e-11 *lens_ipow(x, 8) + 3.28724e-10 *lens_ipow(x, 8)*lens_ipow(dx, 2) + -4.57144e-12 *lens_ipow(x, 8)*y*dy + -3.90956e-13 *lens_ipow(x, 2)*lens_ipow(y, 8)*lambda;

const float out_x =  + 61.6861 *dx + 0.516318 *x + 0.239174 *x*lambda + 6.09756 *dx*lambda + 0.0418018 *y*dx*dy + 0.0291763 *x*y*dy + 0.0384633 *lens_ipow(x, 2)*dx + -41.8684 *lens_ipow(dx, 3) + -0.16516 *x*lens_ipow(lambda, 2) + -41.0878 *dx*lens_ipow(dy, 2) + 0.000319801 *x*lens_ipow(y, 2) + 0.000310337 *lens_ipow(x, 3) + 0.431597 *x*lens_ipow(dy, 2) + 0.417681 *x*lens_ipow(dx, 2) + 0.0106198 *lens_ipow(y, 2)*dx + -4.03513 *dx*lens_ipow(lambda, 3) + 1.11768e-05 *x*lens_ipow(y, 2)*lambda + -0.000382566 *lens_ipow(x, 2)*dx*lambda + -8.637e-05 *lens_ipow(x, 2)*y*dx*dy*lambda + 5.14981e-06 *lens_ipow(x, 7)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 13819.6 *lens_ipow(dx, 9)*lens_ipow(lambda, 2) + 1.71189e-08 *lens_ipow(x, 5)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy + 3.21537e-10 *lens_ipow(x, 9)*lens_ipow(lambda, 2) + 0.00130788 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 4)*lens_ipow(dy, 2) + 0.000150672 *lens_ipow(x, 6)*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + 5.82064e-14 *lens_ipow(x, 7)*lens_ipow(y, 4) + -0.0568649 *lens_ipow(x, 4)*lens_ipow(dx, 5)*lens_ipow(lambda, 2) + 6.75549e-08 *lens_ipow(x, 8)*dx*lens_ipow(lambda, 2);
const float out_y =  + 0.453506 *y + 59.1587 *dy + 19.1364 *dy*lambda + 0.592232 *y*lambda + 0.411922 *y*lens_ipow(dx, 2) + 0.0392662 *lens_ipow(y, 2)*dy + 0.451829 *y*lens_ipow(dy, 2) + 0.0283685 *x*y*dx + -42.1243 *lens_ipow(dx, 2)*dy + -0.817315 *y*lens_ipow(lambda, 2) + 0.000312315 *lens_ipow(x, 2)*y + -19.7228 *dy*lens_ipow(lambda, 2) + 0.000313434 *lens_ipow(y, 3) + 0.0101854 *lens_ipow(x, 2)*dy + -41.478 *lens_ipow(dy, 3) + 0.395356 *y*lens_ipow(lambda, 3) + 1.6101e-05 *lens_ipow(y, 3)*lambda + 8.49311e-06 *lens_ipow(x, 2)*y*lambda + 7.11498 *dy*lens_ipow(lambda, 4) + -7.43062e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -9.90812e-06 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.08674e-14 *lens_ipow(x, 2)*lens_ipow(y, 9) + 2.57069e-11 *lens_ipow(y, 9)*lens_ipow(dx, 2) + 2.33768e-09 *lens_ipow(x, 4)*lens_ipow(y, 4)*lens_ipow(dx, 2)*dy + 1.52162e-14 *lens_ipow(x, 6)*lens_ipow(y, 5) + -0.313837 *lens_ipow(x, 2)*y*lens_ipow(dy, 8) + 4.28086e-05 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 4) + 0.00203743 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 5);
const float out_dx =  + -1.63943 *dx + -0.0305953 *x + 0.0323359 *dx*lambda + -0.0004223 *lens_ipow(x, 2)*dx + 1.74614e-06 *x*lens_ipow(y, 2) + 4.9289 *lens_ipow(dx, 3)*lambda + -0.0847201 *x*lens_ipow(dy, 2)*lambda + -1.54502e-05 *x*lens_ipow(y, 2)*lambda + -8.9172e-06 *lens_ipow(x, 3)*lambda + -0.00275435 *x*y*dy*lambda + -0.000390955 *lens_ipow(x, 2)*dx*lambda + -0.000707983 *lens_ipow(y, 2)*dx*lambda + -2.05796 *dx*lens_ipow(dy, 2)*lambda + -0.0998601 *y*dx*dy*lambda + 0.0184584 *x*lens_ipow(dx, 4) + 0.0249779 *y*dx*dy*lens_ipow(lambda, 2) + -8.31442 *lens_ipow(dx, 3)*lens_ipow(lambda, 2) + 1.57657 *lens_ipow(dx, 5) + 4.83602e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + 0.0421838 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 0.00116668 *x*y*dy*lens_ipow(lambda, 2) + -0.020373 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 4.0944 *lens_ipow(dx, 3)*lens_ipow(lambda, 3) + -1.18558 *x*y*lens_ipow(dx, 4)*lens_ipow(dy, 3) + 20.8038 *dx*lens_ipow(dy, 8) + 2134.98 *lens_ipow(dx, 5)*lens_ipow(dy, 4) + 0.000186958 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.000963685 *x*lens_ipow(lambda, 9);
const float out_dy =  + -0.030348 *y + -1.6733 *dy + 0.226598 *dy*lambda + -0.000739868 *y*lambda + 0.0043513 *y*lens_ipow(dx, 2) + -0.000633417 *lens_ipow(y, 2)*dy + -0.00400459 *y*lens_ipow(dy, 2) + 0.0669129 *x*dx*dy + -9.59075e-05 *x*y*dx + 2.91954 *lens_ipow(dx, 2)*dy + 0.000576135 *y*lens_ipow(lambda, 2) + -0.334116 *dy*lens_ipow(lambda, 2) + -3.05205e-06 *lens_ipow(y, 3) + 0.000314298 *lens_ipow(x, 2)*dy + 0.885659 *lens_ipow(dy, 3) + 7.50285e-05 *lens_ipow(x, 2)*dy*lambda + -0.113294 *lens_ipow(dy, 3)*lambda + 0.176171 *dy*lens_ipow(lambda, 3) + -6.45139e-07 *lens_ipow(y, 3)*lambda + 4.94668e-05 *x*y*dx*lambda + 0.00640416 *x*dx*dy*lambda + -0.0369238 *x*lens_ipow(dx, 3)*dy + 2.5536 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.94879 *lens_ipow(dy, 5) + -0.000400921 *x*y*dx*lens_ipow(dy, 2) + 0.0245005 *y*lens_ipow(dy, 4) + 5.94929e-06 *lens_ipow(x, 3)*dx*dy + 0.011227 *y*lens_ipow(dx, 4)*lambda;
const float out_transmittance =  + 0.59399  + 0.836383 *lambda + -0.000344805 *x*dx + -7.02536e-06 *lens_ipow(x, 2) + -1.73936 *lens_ipow(lambda, 2) + 1.70047 *lens_ipow(lambda, 3) + -0.644121 *lens_ipow(lambda, 4) + -0.150549 *lens_ipow(dx, 4) + -0.449125 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.08274e-05 *lens_ipow(x, 2)*y*dy + -1.09547e-05 *x*lens_ipow(y, 2)*dx + -4.56631e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -3.11249e-07 *lens_ipow(y, 4) + -0.00046016 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.35642e-05 *lens_ipow(y, 3)*dy + -2.22792e-09 *lens_ipow(x, 6) + -1.06372e-07 *lens_ipow(x, 5)*dx + -1.21435e-10 *lens_ipow(y, 6) + -5.63631e-10 *lens_ipow(x, 7)*dx + -4.88522e-12 *lens_ipow(x, 4)*lens_ipow(y, 4) + 1.25574e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + -2.84961e-08 *lens_ipow(x, 6)*lens_ipow(dx, 2) + -3.7395e-13 *lens_ipow(x, 2)*lens_ipow(y, 6) + 2.03261e-06 *lens_ipow(y, 4)*lens_ipow(dy, 4)*lambda + 7.20677e-05 *lens_ipow(x, 4)*lens_ipow(dx, 6) + -3.53471e-15 *lens_ipow(x, 8)*lens_ipow(y, 2) + -3.64078e-15 *lens_ipow(x, 10) + 3.93018e-08 *lens_ipow(x, 5)*y*lens_ipow(dx, 3)*dy*lambda;

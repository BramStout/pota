const float out_x =  + -1.10799 *x + -0.0905798 *x*lambda + 40.196 *dx*lambda + 2.10515 *y*dx*dy + 0.0754832 *x*y*dy + 0.133226 *lens_ipow(x, 2)*dx + 26.791 *lens_ipow(dx, 3) + 27.9088 *dx*lens_ipow(dy, 2) + 0.00105276 *x*lens_ipow(y, 2) + 0.00119667 *lens_ipow(x, 3) + 1.23306 *x*lens_ipow(dy, 2) + 3.36803 *x*lens_ipow(dx, 2) + 0.0534469 *lens_ipow(y, 2)*dx + -61.0312 *dx*lens_ipow(lambda, 2) + 30.4395 *dx*lens_ipow(lambda, 3) + -0.00016579 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -8.16049e-07 *lens_ipow(x, 6)*dx + -2.03688e-06 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + -6.44038e-08 *lens_ipow(x, 3)*lens_ipow(y, 4) + -0.0262952 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + -3.92523e-08 *lens_ipow(x, 5)*lens_ipow(y, 2) + -0.00581142 *lens_ipow(x, 3)*lens_ipow(dx, 4) + -1.95829e-08 *lens_ipow(x, 7) + -0.128373 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 4) + -6.99074e-11 *x*lens_ipow(y, 8) + -2.8667e-09 *x*lens_ipow(y, 7)*dy + 1.94447e-07 *lens_ipow(x, 6)*y*dx*dy + 1.37312e-09 *lens_ipow(x, 5)*lens_ipow(y, 4)*lens_ipow(dx, 2);
const float out_y =  + -1.00151 *y + 8.2466 *dy + 0.97099 *dy*lambda + -0.455304 *y*lambda + 0.995845 *y*lens_ipow(dx, 2) + 0.130079 *lens_ipow(y, 2)*dy + 3.34769 *y*lens_ipow(dy, 2) + 1.9089 *x*dx*dy + 0.0699908 *x*y*dx + 18.5642 *lens_ipow(dx, 2)*dy + 0.324668 *y*lens_ipow(lambda, 2) + 0.000856088 *lens_ipow(x, 2)*y + 0.00110582 *lens_ipow(y, 3) + 0.05103 *lens_ipow(x, 2)*dy + 26.4204 *lens_ipow(dy, 3) + -1.25836 *x*lens_ipow(dx, 3)*dy + -0.000134239 *lens_ipow(x, 3)*y*dx + 0.00190002 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -3.15418 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.000167132 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -1.79689e-08 *lens_ipow(y, 7) + -7.19221e-07 *lens_ipow(y, 6)*dy + -1.1258e-08 *lens_ipow(x, 6)*y + -3.3697e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + -3.903e-08 *lens_ipow(x, 4)*lens_ipow(y, 3) + 0.143156 *lens_ipow(y, 2)*lens_ipow(dy, 5) + 2.30271e-07 *x*lens_ipow(y, 6)*dx*dy*lambda + 1.74713e-09 *lens_ipow(x, 4)*lens_ipow(y, 5)*lens_ipow(dx, 2);
const float out_dx =  + -0.24973 *dx + -0.0790022 *x + 0.00582542 *x*lambda + 0.00236612 *lens_ipow(x, 2)*dx + 3.81983e-05 *x*lens_ipow(y, 2) + 8.9246e-05 *lens_ipow(x, 3) + 0.172699 *x*lens_ipow(dx, 2)*lambda + 0.00165633 *lens_ipow(y, 2)*dx*lambda + 5.81234e-06 *lens_ipow(y, 4)*dx + 6.72492 *lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -6.06714 *lens_ipow(dx, 3)*lens_ipow(lambda, 3) + 0.00621329 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 3) + 0.000999368 *lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 2) + -5.56523e-12 *lens_ipow(x, 7)*lens_ipow(y, 2) + 3.86556e-09 *x*lens_ipow(y, 6)*lens_ipow(lambda, 2) + 5.03358e-05 *x*lens_ipow(y, 3)*dy*lens_ipow(lambda, 4) + 1.35499e-07 *x*lens_ipow(y, 5)*dy*lens_ipow(lambda, 2) + -3.11126e-05 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 4) + 6.72353e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(lambda, 2) + 171.022 *lens_ipow(dx, 5)*lens_ipow(dy, 4)*lambda + -0.00458756 *lens_ipow(y, 3)*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -2.83521e-11 *lens_ipow(x, 3)*lens_ipow(y, 6)*lambda + -2.96283e-11 *lens_ipow(x, 5)*lens_ipow(y, 4)*lambda + -3.03637e-12 *lens_ipow(x, 9)*lambda + 3.03521e-08 *lens_ipow(y, 6)*dx*lens_ipow(lambda, 4) + 8.32911e-05 *lens_ipow(x, 4)*lens_ipow(dx, 3)*lens_ipow(lambda, 4) + -1.12336e-11 *x*lens_ipow(y, 8)*lens_ipow(lambda, 2) + 1.24652e-05 *x*lens_ipow(y, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 4);
const float out_dy =  + -0.0812351 *y + -0.280867 *dy + 0.0429656 *dy*lambda + 0.0140781 *y*lambda + 0.00330655 *lens_ipow(y, 2)*dy + 0.106182 *y*lens_ipow(dy, 2) + 0.0529577 *x*dx*dy + -0.00852811 *y*lens_ipow(lambda, 2) + 0.000112606 *lens_ipow(x, 2)*y + 8.92269e-05 *lens_ipow(y, 3) + 0.00131885 *lens_ipow(x, 2)*dy + 1.11666 *lens_ipow(dy, 3) + 1.72313 *lens_ipow(dx, 2)*dy*lambda + 0.00206368 *x*y*dx*lambda + 0.0544768 *x*dx*dy*lens_ipow(lambda, 2) + -0.0347859 *x*lens_ipow(dx, 3)*dy + 0.114422 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.00361735 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.0311424 *y*lens_ipow(dy, 4) + 9.33907e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.0805241 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + 1.877e-05 *lens_ipow(x, 4)*lens_ipow(dy, 3)*lambda + 2.03187e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lens_ipow(lambda, 2) + -1.02479e-12 *lens_ipow(y, 9)*lambda + -5.92894e-12 *lens_ipow(x, 2)*lens_ipow(y, 7)*lambda + -2.83505e-15 *lens_ipow(y, 11) + -3.67053e-14 *lens_ipow(x, 8)*lens_ipow(y, 3) + -4.77863e-14 *lens_ipow(x, 4)*lens_ipow(y, 7);
const float out_transmittance =  + 0.829835 *lambda + -1.08215 *lens_ipow(lambda, 2) + 0.503594 *lens_ipow(lambda, 3) + 0.0145961 *y*lens_ipow(dy, 3) + -0.568749 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.16067e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -3.82145e-05 *lens_ipow(y, 3)*dy + -1.76453e-06 *lens_ipow(x, 4)*lambda + -5.34716e-07 *lens_ipow(y, 4)*lambda + 0.00280576 *x*y*dx*dy*lambda + -0.793914 *lens_ipow(dx, 6) + -2.16535e-08 *lens_ipow(y, 6) + -4.93127e-07 *lens_ipow(x, 5)*dx*lambda + -4.54478e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx + 1.46013e-10 *lens_ipow(y, 8) + -2.45372e-11 *lens_ipow(x, 8) + -0.0114921 *x*y*lens_ipow(dx, 3)*dy*lens_ipow(lambda, 2) + -7.97349e-09 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy*lambda + -0.0138635 *x*y*dx*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -3.07018e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy*lambda + 1.30754e-10 *lens_ipow(x, 2)*lens_ipow(y, 6)*lambda + -3.74594e-13 *lens_ipow(y, 10) + -5.66313e-05 *lens_ipow(x, 3)*dx*lens_ipow(lambda, 6) + -1.20621e-12 *lens_ipow(x, 4)*lens_ipow(y, 6) + -6.28574e-08 *lens_ipow(x, 6)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -2.57329e-13 *lens_ipow(x, 8)*lens_ipow(y, 2) + -1.16038e-12 *lens_ipow(x, 2)*lens_ipow(y, 8)*lambda + -2.06616e-12 *lens_ipow(x, 6)*lens_ipow(y, 4)*lambda;

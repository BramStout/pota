float pred_x;
float pred_y;
float pred_dx;
float pred_dy;
float sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const float begin_x = x + dist * dx;
  const float begin_y = y + dist * dy;
  const float begin_dx = dx;
  const float begin_dy = dy;
  __attribute__((unused)) const float begin_lambda = lambda;
  pred_x =  + 66.2069 *begin_dx + 0.5962 *begin_x + 0.250805 *begin_x*begin_lambda + 17.9457 *begin_dx*begin_lambda + -0.631637 *begin_y*begin_dx*begin_dy + -0.00169732 *begin_x*begin_y*begin_dy + -0.00274299 *lens_ipow(begin_x, 2)*begin_dx + -48.5219 *lens_ipow(begin_dx, 3) + -0.346547 *begin_x*lens_ipow(begin_lambda, 2) + -46.9272 *begin_dx*lens_ipow(begin_dy, 2) + -2.76025e-06 *lens_ipow(begin_x, 3) + -0.29773 *begin_x*lens_ipow(begin_dy, 2) + -0.945888 *begin_x*lens_ipow(begin_dx, 2) + -0.00117191 *lens_ipow(begin_y, 2)*begin_dx + -24.4136 *begin_dx*lens_ipow(begin_lambda, 2) + 11.7019 *begin_dx*lens_ipow(begin_lambda, 3) + 0.167874 *begin_x*lens_ipow(begin_lambda, 3) + -4.80601e-06 *begin_x*lens_ipow(begin_y, 2)*begin_lambda + -0.00107164 *begin_x*begin_y*begin_dy*begin_lambda + -0.00151481 *lens_ipow(begin_x, 2)*begin_dx*begin_lambda + -0.0170197 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + 48.409 *lens_ipow(begin_dx, 5) + -0.00013336 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.0107591 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -0.0237075 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 121.445 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*begin_lambda + -0.000262956 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_lambda + -0.000233004 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2);
  pred_y =  + 0.623078 *begin_y + 67.8437 *begin_dy + 8.18959 *begin_dy*begin_lambda + 0.0989906 *begin_y*begin_lambda + -0.303511 *begin_y*lens_ipow(begin_dx, 2) + -0.00213596 *lens_ipow(begin_y, 2)*begin_dy + -0.858359 *begin_y*lens_ipow(begin_dy, 2) + -0.00237215 *begin_x*begin_y*begin_dx + -0.067194 *begin_y*lens_ipow(begin_lambda, 2) + -4.29705e-06 *lens_ipow(begin_x, 2)*begin_y + -5.64735 *begin_dy*lens_ipow(begin_lambda, 2) + -45.5101 *lens_ipow(begin_dy, 3) + -201.662 *lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.00104475 *lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -2.35583 *begin_x*begin_dx*begin_dy*begin_lambda + 2.1099 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -0.0133921 *lens_ipow(begin_x, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 259.61 *lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 2) + -1.13034e-05 *lens_ipow(begin_y, 4)*begin_dy*begin_lambda + 41.9825 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + -94.6589 *lens_ipow(begin_dx, 2)*begin_dy*lens_ipow(begin_lambda, 3) + -0.00229265 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2)*begin_lambda + -2.62607e-08 *lens_ipow(begin_y, 5)*begin_lambda + 0.015556 *lens_ipow(begin_x, 2)*begin_dy*lens_ipow(begin_lambda, 3) + -8.02377 *begin_y*lens_ipow(begin_dy, 4)*begin_lambda + -0.22871 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*begin_lambda + -4.33424 *begin_y*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + -264.677 *lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 2);
  pred_dx =  + 0.750736 *begin_dx + -0.007991 *begin_x + -0.325733 *begin_dx*begin_lambda + 0.023804 *begin_y*begin_dx*begin_dy + 0.000322971 *lens_ipow(begin_x, 2)*begin_dx + -0.00144593 *begin_x*lens_ipow(begin_lambda, 2) + 1.78703 *begin_dx*lens_ipow(begin_dy, 2) + 0.000105249 *lens_ipow(begin_y, 2)*begin_dx + 0.245136 *begin_dx*lens_ipow(begin_lambda, 2) + 0.142763 *begin_x*lens_ipow(begin_dx, 2)*begin_lambda + 6.35475 *lens_ipow(begin_dx, 3)*begin_lambda + 0.0458962 *begin_x*lens_ipow(begin_dy, 2)*begin_lambda + 0.00174266 *begin_x*lens_ipow(begin_lambda, 3) + 6.53855e-07 *begin_x*lens_ipow(begin_y, 2)*begin_lambda + 2.5233e-06 *lens_ipow(begin_x, 3)*begin_lambda + 0.000798757 *begin_x*begin_y*begin_dy*begin_lambda + 0.205025 *begin_x*lens_ipow(begin_dx, 4) + -6.30575 *lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + 10.3936 *lens_ipow(begin_dx, 5) + -3.92589e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_lambda, 2) + -0.155157 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -0.0439539 *begin_x*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -0.000792449 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 2) + 0.00801955 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*begin_lambda + 0.286882 *begin_x*lens_ipow(begin_dx, 4)*begin_lambda + -0.000538618 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 4) + 5.99453e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -2.67236e-06 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 6);
  pred_dy =  + -0.00812867 *begin_y + 0.782426 *begin_dy + -0.552262 *begin_dy*begin_lambda + 0.0117314 *begin_y*lens_ipow(begin_dx, 2) + 0.000456385 *lens_ipow(begin_y, 2)*begin_dy + 0.043139 *begin_y*lens_ipow(begin_dy, 2) + 0.0230275 *begin_x*begin_dx*begin_dy + 0.000199112 *begin_x*begin_y*begin_dx + 1.74763 *lens_ipow(begin_dx, 2)*begin_dy + 2.44318e-07 *lens_ipow(begin_x, 2)*begin_y + 0.758713 *begin_dy*lens_ipow(begin_lambda, 2) + 1.10781e-06 *lens_ipow(begin_y, 3) + 9.80018e-05 *lens_ipow(begin_x, 2)*begin_dy + 1.82849 *lens_ipow(begin_dy, 3) + -0.030375 *begin_y*lens_ipow(begin_dy, 2)*begin_lambda + -0.820966 *lens_ipow(begin_dy, 3)*begin_lambda + -0.000408932 *lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -0.363228 *begin_dy*lens_ipow(begin_lambda, 3) + -1.70969e-06 *lens_ipow(begin_y, 3)*begin_lambda + 1.61518e-07 *lens_ipow(begin_y, 4)*begin_dy + 15.3789 *lens_ipow(begin_dy, 5) + 0.00882723 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -2.19196e-05 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 2) + 0.000255095 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 0.596808 *begin_y*lens_ipow(begin_dy, 4) + 5.86072e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -0.00717465 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 4) + 0.0044526 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5);
  float dx1_domega0[2][2];
  dx1_domega0[0][0] =  + 66.2069  + 17.9457 *begin_lambda + -0.631637 *begin_y*begin_dy + -0.00274299 *lens_ipow(begin_x, 2) + -145.566 *lens_ipow(begin_dx, 2) + -46.9272 *lens_ipow(begin_dy, 2) + -1.89178 *begin_x*begin_dx + -0.00117191 *lens_ipow(begin_y, 2) + -24.4136 *lens_ipow(begin_lambda, 2) + 11.7019 *lens_ipow(begin_lambda, 3) + -0.00151481 *lens_ipow(begin_x, 2)*begin_lambda + -0.0510591 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + 242.045 *lens_ipow(begin_dx, 4) + -0.000266721 *begin_x*lens_ipow(begin_y, 2)*begin_dx + -0.0322772 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.0237075 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 364.336 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -0.000525913 *lens_ipow(begin_x, 3)*begin_dx*begin_lambda+0.0f;
  dx1_domega0[0][1] =  + -0.631637 *begin_y*begin_dx + -0.00169732 *begin_x*begin_y + -93.8544 *begin_dx*begin_dy + -0.59546 *begin_x*begin_dy + -0.00107164 *begin_x*begin_y*begin_lambda + -0.047415 *lens_ipow(begin_x, 2)*begin_dx*begin_dy*begin_lambda + 242.891 *lens_ipow(begin_dx, 3)*begin_dy*begin_lambda + -0.000466008 *lens_ipow(begin_x, 3)*begin_dy*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0[1][0] =  + -0.607023 *begin_y*begin_dx + -0.00237215 *begin_x*begin_y + -403.324 *begin_dx*begin_dy*begin_lambda + -2.35583 *begin_x*begin_dy*begin_lambda + 2.1099 *begin_x*begin_dy*lens_ipow(begin_lambda, 2) + 519.221 *begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 83.965 *begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + -189.318 *begin_dx*begin_dy*lens_ipow(begin_lambda, 3)+0.0f;
  dx1_domega0[1][1] =  + 67.8437  + 8.18959 *begin_lambda + -0.00213596 *lens_ipow(begin_y, 2) + -1.71672 *begin_y*begin_dy + -5.64735 *lens_ipow(begin_lambda, 2) + -136.53 *lens_ipow(begin_dy, 2) + -201.662 *lens_ipow(begin_dx, 2)*begin_lambda + -0.00104475 *lens_ipow(begin_y, 2)*begin_lambda + -2.35583 *begin_x*begin_dx*begin_lambda + 2.1099 *begin_x*begin_dx*lens_ipow(begin_lambda, 2) + -0.0133921 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 2) + 259.61 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -1.13034e-05 *lens_ipow(begin_y, 4)*begin_lambda + 125.947 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -94.6589 *lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 3) + -0.0045853 *lens_ipow(begin_y, 3)*begin_dy*begin_lambda + 0.015556 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 3) + -32.0951 *begin_y*lens_ipow(begin_dy, 3)*begin_lambda + -0.686131 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -17.3369 *begin_y*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + -1323.39 *lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2)+0.0f;
  float invJ[2][2];
  const float invdet = 1.0f/(dx1_domega0[0][0]*dx1_domega0[1][1] - dx1_domega0[0][1]*dx1_domega0[1][0]);
  invJ[0][0] =  dx1_domega0[1][1]*invdet;
  invJ[1][1] =  dx1_domega0[0][0]*invdet;
  invJ[0][1] = -dx1_domega0[0][1]*invdet;
  invJ[1][0] = -dx1_domega0[1][0]*invdet;
  const float dx1[2] = {out_x - pred_x, out_y - pred_y};
  for(int i=0;i<2;i++)
  {
    dx += invJ[0][i]*dx1[i];
    dy += invJ[1][i]*dx1[i];
  }
  sqr_err = dx1[0]*dx1[0] + dx1[1]*dx1[1];
}
out_dx = pred_dx;
out_dy = pred_dy;
